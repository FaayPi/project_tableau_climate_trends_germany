<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0520.1026                               -->
<workbook original-version='18.1' source-build='2025.1.2 (20251.25.0520.1026)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CustomReferenceLineTooltips />
    <_.fcp.IndividualControlFormatting.true...IndividualControlFormatting />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='project_module4_tableau_climate_trends_full_version' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Region Parameter_page1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
        <calculation class='tableau' formula='&quot;West&quot;' />
        <aliases>
          <alias key='&quot;All&quot;' value='Germany' />
        </aliases>
        <members>
          <member alias='Germany' value='&quot;All&quot;' />
          <member value='&quot;East&quot;' />
          <member value='&quot;West&quot;' />
          <member value='&quot;South&quot;' />
          <member value='&quot;North&quot;' />
        </members>
      </column>
      <column caption='Parameter Climate Periods IPCC' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <members>
          <member value='&quot;All&quot;' />
          <member value='&quot;Recent Years (2021–2024)&quot;' />
          <member value='&quot;Comparison Period (1991–2020)&quot;' />
          <member value='&quot;Reference Period (1961–1990)&quot;' />
        </members>
      </column>
      <column alias='Winter' caption='Season Parameter_page1' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;winter&quot;'>
        <calculation class='tableau' formula='&quot;winter&quot;' />
        <aliases>
          <alias key='&quot;All&quot;' value='all Seasons' />
          <alias key='&quot;autumn&quot;' value='Autumn' />
          <alias key='&quot;spring&quot;' value='Spring' />
          <alias key='&quot;summer&quot;' value='Summer' />
          <alias key='&quot;winter&quot;' value='Winter' />
        </aliases>
        <members>
          <member alias='all Seasons' value='&quot;All&quot;' />
          <member alias='Spring' value='&quot;spring&quot;' />
          <member alias='Summer' value='&quot;summer&quot;' />
          <member alias='Autumn' value='&quot;autumn&quot;' />
          <member alias='Winter' value='&quot;winter&quot;' />
        </members>
      </column>
      <column caption='Select Climate Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Precipitation&quot;'>
        <calculation class='tableau' formula='&quot;Precipitation&quot;' />
        <members>
          <member value='&quot;Temperature&quot;' />
          <member value='&quot;Precipitation&quot;' />
        </members>
      </column>
      <column caption='Region Parameter_page3' datatype='string' name='[Region Parameter_page1 (copy)_6593903205935779842]' param-domain-type='list' role='measure' type='nominal' value='&quot;East&quot;'>
        <calculation class='tableau' formula='&quot;East&quot;' />
        <aliases>
          <alias key='&quot;All&quot;' value='Germany' />
        </aliases>
        <members>
          <member alias='Germany' value='&quot;All&quot;' />
          <member value='&quot;East&quot;' />
          <member value='&quot;West&quot;' />
          <member value='&quot;South&quot;' />
          <member value='&quot;North&quot;' />
        </members>
      </column>
      <column caption='Region Parameter_page4' datatype='string' name='[Region Parameter_page3 (copy)_6593903205941825544]' param-domain-type='list' role='measure' type='nominal' value='&quot;North&quot;'>
        <calculation class='tableau' formula='&quot;North&quot;' />
        <aliases>
          <alias key='&quot;All&quot;' value='Germany' />
        </aliases>
        <members>
          <member alias='Germany' value='&quot;All&quot;' />
          <member value='&quot;East&quot;' />
          <member value='&quot;West&quot;' />
          <member value='&quot;South&quot;' />
          <member value='&quot;North&quot;' />
        </members>
      </column>
      <column alias='Summer' caption='Season Parameter_page2' datatype='string' name='[Season Parameter_page1 (copy)_6593903205935427585]' param-domain-type='list' role='measure' type='nominal' value='&quot;summer&quot;'>
        <calculation class='tableau' formula='&quot;summer&quot;' />
        <aliases>
          <alias key='&quot;All&quot;' value='all Seasons' />
          <alias key='&quot;autumn&quot;' value='Autumn' />
          <alias key='&quot;spring&quot;' value='Spring' />
          <alias key='&quot;summer&quot;' value='Summer' />
          <alias key='&quot;winter&quot;' value='Winter' />
        </aliases>
        <members>
          <member alias='all Seasons' value='&quot;All&quot;' />
          <member alias='Spring' value='&quot;spring&quot;' />
          <member alias='Summer' value='&quot;summer&quot;' />
          <member alias='Autumn' value='&quot;autumn&quot;' />
          <member alias='Winter' value='&quot;winter&quot;' />
        </members>
      </column>
      <column alias='all Seasons' caption='Season Parameter_page3' datatype='string' name='[Season Parameter_page2 (copy)_6593903205935837187]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <aliases>
          <alias key='&quot;All&quot;' value='all Seasons' />
          <alias key='&quot;autumn&quot;' value='Autumn' />
          <alias key='&quot;spring&quot;' value='Spring' />
          <alias key='&quot;summer&quot;' value='Summer' />
          <alias key='&quot;winter&quot;' value='Winter' />
        </aliases>
        <members>
          <member alias='all Seasons' value='&quot;All&quot;' />
          <member alias='Spring' value='&quot;spring&quot;' />
          <member alias='Summer' value='&quot;summer&quot;' />
          <member alias='Autumn' value='&quot;autumn&quot;' />
          <member alias='Winter' value='&quot;winter&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='df_merged_final' inline='true' name='federated.0doh8r11iozygs1bkboxa1cfier8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='df_merged_final' name='textscan.1b4h04o0i8yoqa0zzvbi11lpex56'>
            <connection class='textscan' directory='/Users/feepieper/Library/CloudStorage/OneDrive-Persönlich/Ironhack/Module3/project/final_project' filename='df_merged_final.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1b4h04o0i8yoqa0zzvbi11lpex56' name='df_merged_final.csv' table='[df_merged_final#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en' separator=','>
            <column datatype='string' name='Season' ordinal='0' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
            <column datatype='string' name='State' ordinal='2' />
            <column datatype='real' name='Temperature' ordinal='3' />
            <column datatype='real' name='Precipitation' ordinal='4' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_merged_final.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Season]</local-name>
            <parent-name>[df_merged_final.csv]</parent-name>
            <remote-alias>Season</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[df_merged_final.csv_3671CB00EC6E4332ABF1C38B3127822C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[df_merged_final.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[df_merged_final.csv_3671CB00EC6E4332ABF1C38B3127822C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[df_merged_final.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[df_merged_final.csv_3671CB00EC6E4332ABF1C38B3127822C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature]</local-name>
            <parent-name>[df_merged_final.csv]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_merged_final.csv_3671CB00EC6E4332ABF1C38B3127822C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Precipitation</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Precipitation]</local-name>
            <parent-name>[df_merged_final.csv]</parent-name>
            <remote-alias>Precipitation</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[df_merged_final.csv_3671CB00EC6E4332ABF1C38B3127822C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='avg preci recent years' datatype='string' default-format='n#,##0.0;-#,##0.0' name='[Avg. climate parameter recent years (copy)_5798103077752119297]' role='measure' type='nominal'>
        <calculation class='tableau' formula='STR(&#10;  ROUND(&#10;    AVG(&#10;      IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 &#10;      THEN [Precipitation] &#10;      END&#10;    ), &#10;  1)&#10;) + &quot; mm&quot;' />
      </column>
      <column caption='Climate Periods by IPCC' datatype='string' name='[Calculation_4694439693634560000]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF YEAR([Year]) &gt;= 1961 AND YEAR([Year]) &lt;= 1990 THEN &quot;Reference Period (1961–1990)&quot;&#10;ELSEIF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN &quot;Comparison Period (1991–2020)&quot;&#10;ELSEIF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN &quot;Recent Years (2021–2024)&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
      </column>
      <column caption='30years periods' datatype='string' name='[Calculation_4694439693635837953]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR(&#10;    INT((YEAR([Year]) - 1881) / 30) * 30 + 1881&#10;) + &quot;–&quot; + STR(&#10;    INT((YEAR([Year]) - 1881) / 30) * 30 + 1910&#10;)' />
        <aliases>
          <alias key='&quot;2001–2030&quot;' value='2001–2024' />
        </aliases>
      </column>
      <column caption='Climate Period Selector' datatype='boolean' name='[Calculation_5117778058666545152]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Recent Years (2021–2024)&quot; THEN [Calculation_4694439693634560000] = &quot;Recent Years (2021–2024)&quot;&#10;WHEN &quot;Comparison Period (1991–2020)&quot; THEN [Calculation_4694439693634560000] = &quot;Comparison Period (1991–2020)&quot;&#10;WHEN &quot;Reference Period (1961–1990)&quot; THEN [Calculation_4694439693634560000] = &quot;Reference Period (1961–1990)&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
      </column>
      <column caption='Region Selector' datatype='boolean' name='[Calculation_5117778058666921985]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;East&quot; THEN [State (group)] = &quot;East&quot;&#10;WHEN &quot;West&quot; THEN [State (group)] = &quot;West&quot;&#10;WHEN &quot;South&quot; THEN [State (group)] = &quot;South&quot;&#10;WHEN &quot;North&quot; THEN [State (group)] = &quot;North&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
      </column>
      <column caption='Season Selector' datatype='boolean' name='[Calculation_5117778058668744708]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Parameter 3])&#10;END' />
      </column>
      <column caption='Temp/Preci Selector' datatype='real' name='[Calculation_5367938944472649729]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF  [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN [Temperature]&#10;ELSE [Precipitation]&#10;END' />
      </column>
      <column caption='Dynamic Axis Title ' datatype='string' name='[Calculation_5367938944473694210]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN &quot;Average Temperature (°C)&quot;&#10;ELSE &quot;Average Precipitation (mm)&quot;&#10;END' />
      </column>
      <column caption='Colour Selector Climate' datatype='string' name='[Calculation_5526127881437024257]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN &quot;Warm&quot;&#10;ELSE &quot;Cool&quot;&#10;END' />
      </column>
      <column caption='Avg. climate parameter recent years' datatype='string' default-format='n#,##0.0;-#,##0.0' name='[Calculation_5680305799972806656]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN&#10;    STR(ROUND(AVG(&#10;        IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] END&#10;    ), 1)) + &quot; °C&quot;&#10;ELSE&#10;    STR(ROUND(AVG(&#10;        IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Precipitation] END&#10;    ), 1)) + &quot; mm&quot;&#10;END' />
      </column>
      <column caption='KPI Display with Unit' datatype='string' name='[Calculation_5731745351973609472]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN&#10;    STR(ROUND([Temperature], 1)) + &quot; °C&quot;&#10;ELSE&#10;    STR(ROUND([Precipitation], 0)) + &quot; mm&quot;&#10;END' />
      </column>
      <column caption='avg climate parameter comparison period ' datatype='string' name='[Calculation_5731745351976423425]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN&#10;    STR(ROUND(AVG(&#10;        IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] END&#10;    ), 1)) + &quot; °C&quot;&#10;ELSE&#10;    STR(ROUND(AVG(&#10;        IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Precipitation] END&#10;    ), 1)) + &quot; mm&quot;&#10;END' />
      </column>
      <column caption='delta climate parameter' datatype='string' name='[Calculation_5731745351977701378]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN&#10;    // Delta berechnen&#10;    STR(&#10;        IF &#10;            AVG(IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] END)&#10;            - &#10;            AVG(IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] END) &gt; 0&#10;        THEN &quot;+&quot;&#10;        ELSE &quot;&quot;&#10;        END&#10;        +&#10;        STR(ROUND(&#10;            AVG(IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] END)&#10;            -&#10;            AVG(IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] END),&#10;        1))&#10;        + &quot; °C&quot;&#10;)&#10;ELSE&#10;    STR(&#10;        IF &#10;            AVG(IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Precipitation] END)&#10;            - &#10;            AVG(IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Precipitation] END) &gt; 0&#10;        THEN &quot;+&quot;&#10;        ELSE &quot;&quot;&#10;        END&#10;        +&#10;        STR(ROUND(&#10;            AVG(IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Precipitation] END)&#10;            -&#10;            AVG(IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Precipitation] END),&#10;        1))&#10;        + &quot; mm&quot;&#10;)&#10;END' />
      </column>
      <column caption='Filtered precip' datatype='real' name='[Calculation_5731745351980728323]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [Season] = [Parameters].[Parameter 3]&#10;   AND [Calculation_4694439693634560000] = [Parameters].[Parameter 4]&#10;THEN [Precipitation]&#10;END' />
      </column>
      <column caption='Index()' datatype='integer' name='[Calculation_5798103077744672768]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='LinkedIn' datatype='string' name='[Calculation_6694319403922849792]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;Connect with me on LinkedIn. Click here.&quot;' />
      </column>
      <column datatype='real' default-format='n#,##0&quot;mm&quot;;-#,##0&quot;mm&quot;' name='[Precipitation]' role='measure' type='quantitative' />
      <column caption='Region Selector_page3' datatype='boolean' name='[Region Selector (copy)_6593903205936443396]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Region Parameter_page1 (copy)_6593903205935779842]&#10;WHEN &quot;East&quot; THEN [State (group)] = &quot;East&quot;&#10;WHEN &quot;West&quot; THEN [State (group)] = &quot;West&quot;&#10;WHEN &quot;South&quot; THEN [State (group)] = &quot;South&quot;&#10;WHEN &quot;North&quot; THEN [State (group)] = &quot;North&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
      </column>
      <column caption='Region Selector_page4' datatype='boolean' name='[Region Selector_page3 (copy)_6593903205941772295]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CASE [Parameters].[Region Parameter_page3 (copy)_6593903205941825544]&#10;WHEN &quot;East&quot; THEN [State (group)] = &quot;East&quot;&#10;WHEN &quot;West&quot; THEN [State (group)] = &quot;West&quot;&#10;WHEN &quot;South&quot; THEN [State (group)] = &quot;South&quot;&#10;WHEN &quot;North&quot; THEN [State (group)] = &quot;North&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
      </column>
      <column caption='Season Selector_page2' datatype='boolean' name='[Season Selector (copy)_6593903205940457477]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Season Parameter_page1 (copy)_6593903205935427585] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Season Parameter_page1 (copy)_6593903205935427585])&#10;END' />
      </column>
      <column caption='Season Selector_page3' datatype='boolean' name='[Season Selector_page2 (copy)_6593903205941587974]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Season Parameter_page2 (copy)_6593903205935837187] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Season Parameter_page2 (copy)_6593903205935837187])&#10;END' />
      </column>
      <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State]' new-bin='true'>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>&quot;Berlin&quot;</value>
            <value>&quot;Brandenburg&quot;</value>
            <value>&quot;Sachsen&quot;</value>
            <value>&quot;Sachsen-Anhalt&quot;</value>
            <value>&quot;Thüringen&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;North&quot;'>
            <value>&quot;Bremen&quot;</value>
            <value>&quot;Hamburg&quot;</value>
            <value>&quot;Mecklenburg-Vorpommern&quot;</value>
            <value>&quot;Niedersachsen&quot;</value>
            <value>&quot;Schleswig-Holstein&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South&quot;'>
            <value>&quot;Baden-Württemberg&quot;</value>
            <value>&quot;Bayern&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Hessen&quot;</value>
            <value>&quot;Nordrhein-Westfalen&quot;</value>
            <value>&quot;Rheinland-Pfalz&quot;</value>
            <value>&quot;Saarland&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='real' default-format='c#,##0.0&quot;°C&quot;;-#,##0.0&quot;°C&quot;' name='[Temperature]' role='measure' type='quantitative' />
      <column caption='Decades' datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Year]' new-bin='true'>
          <bin default-name='false' value='&quot;1880s&quot;'>
            <value>#1881-01-01#</value>
            <value>#1882-01-01#</value>
            <value>#1883-01-01#</value>
            <value>#1884-01-01#</value>
            <value>#1885-01-01#</value>
            <value>#1886-01-01#</value>
            <value>#1887-01-01#</value>
            <value>#1888-01-01#</value>
            <value>#1889-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1890s&quot;'>
            <value>#1890-01-01#</value>
            <value>#1891-01-01#</value>
            <value>#1892-01-01#</value>
            <value>#1893-01-01#</value>
            <value>#1894-01-01#</value>
            <value>#1895-01-01#</value>
            <value>#1896-01-01#</value>
            <value>#1897-01-01#</value>
            <value>#1898-01-01#</value>
            <value>#1899-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1900s&quot;'>
            <value>#1900-01-01#</value>
            <value>#1901-01-01#</value>
            <value>#1902-01-01#</value>
            <value>#1903-01-01#</value>
            <value>#1904-01-01#</value>
            <value>#1905-01-01#</value>
            <value>#1906-01-01#</value>
            <value>#1907-01-01#</value>
            <value>#1908-01-01#</value>
            <value>#1909-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1910s&quot;'>
            <value>#1910-01-01#</value>
            <value>#1911-01-01#</value>
            <value>#1912-01-01#</value>
            <value>#1913-01-01#</value>
            <value>#1914-01-01#</value>
            <value>#1915-01-01#</value>
            <value>#1916-01-01#</value>
            <value>#1917-01-01#</value>
            <value>#1918-01-01#</value>
            <value>#1919-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1920s&quot;'>
            <value>#1920-01-01#</value>
            <value>#1921-01-01#</value>
            <value>#1922-01-01#</value>
            <value>#1923-01-01#</value>
            <value>#1924-01-01#</value>
            <value>#1925-01-01#</value>
            <value>#1926-01-01#</value>
            <value>#1927-01-01#</value>
            <value>#1928-01-01#</value>
            <value>#1929-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1930s&quot;'>
            <value>#1930-01-01#</value>
            <value>#1931-01-01#</value>
            <value>#1932-01-01#</value>
            <value>#1933-01-01#</value>
            <value>#1934-01-01#</value>
            <value>#1935-01-01#</value>
            <value>#1936-01-01#</value>
            <value>#1937-01-01#</value>
            <value>#1938-01-01#</value>
            <value>#1939-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1940s&quot;'>
            <value>#1940-01-01#</value>
            <value>#1941-01-01#</value>
            <value>#1942-01-01#</value>
            <value>#1943-01-01#</value>
            <value>#1944-01-01#</value>
            <value>#1945-01-01#</value>
            <value>#1946-01-01#</value>
            <value>#1947-01-01#</value>
            <value>#1948-01-01#</value>
            <value>#1949-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1950s&quot;'>
            <value>#1950-01-01#</value>
            <value>#1951-01-01#</value>
            <value>#1952-01-01#</value>
            <value>#1953-01-01#</value>
            <value>#1954-01-01#</value>
            <value>#1955-01-01#</value>
            <value>#1956-01-01#</value>
            <value>#1957-01-01#</value>
            <value>#1958-01-01#</value>
            <value>#1959-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1960s&quot;'>
            <value>#1960-01-01#</value>
            <value>#1961-01-01#</value>
            <value>#1962-01-01#</value>
            <value>#1963-01-01#</value>
            <value>#1964-01-01#</value>
            <value>#1965-01-01#</value>
            <value>#1966-01-01#</value>
            <value>#1967-01-01#</value>
            <value>#1968-01-01#</value>
            <value>#1969-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1970s&quot;'>
            <value>#1970-01-01#</value>
            <value>#1971-01-01#</value>
            <value>#1972-01-01#</value>
            <value>#1973-01-01#</value>
            <value>#1974-01-01#</value>
            <value>#1975-01-01#</value>
            <value>#1976-01-01#</value>
            <value>#1977-01-01#</value>
            <value>#1978-01-01#</value>
            <value>#1979-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1980s&quot;'>
            <value>#1980-01-01#</value>
            <value>#1981-01-01#</value>
            <value>#1982-01-01#</value>
            <value>#1983-01-01#</value>
            <value>#1984-01-01#</value>
            <value>#1985-01-01#</value>
            <value>#1986-01-01#</value>
            <value>#1987-01-01#</value>
            <value>#1988-01-01#</value>
            <value>#1989-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;1990s&quot;'>
            <value>#1990-01-01#</value>
            <value>#1991-01-01#</value>
            <value>#1992-01-01#</value>
            <value>#1993-01-01#</value>
            <value>#1994-01-01#</value>
            <value>#1995-01-01#</value>
            <value>#1996-01-01#</value>
            <value>#1997-01-01#</value>
            <value>#1998-01-01#</value>
            <value>#1999-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;2000s&quot;'>
            <value>#2000-01-01#</value>
            <value>#2001-01-01#</value>
            <value>#2002-01-01#</value>
            <value>#2003-01-01#</value>
            <value>#2004-01-01#</value>
            <value>#2005-01-01#</value>
            <value>#2006-01-01#</value>
            <value>#2007-01-01#</value>
            <value>#2008-01-01#</value>
            <value>#2009-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;2010s&quot;'>
            <value>#2010-01-01#</value>
            <value>#2011-01-01#</value>
            <value>#2012-01-01#</value>
            <value>#2013-01-01#</value>
            <value>#2014-01-01#</value>
            <value>#2015-01-01#</value>
            <value>#2016-01-01#</value>
            <value>#2017-01-01#</value>
            <value>#2018-01-01#</value>
            <value>#2019-01-01#</value>
          </bin>
          <bin default-name='false' value='&quot;2020s&quot;'>
            <value>#2020-01-01#</value>
            <value>#2021-01-01#</value>
            <value>#2022-01-01#</value>
            <value>#2023-01-01#</value>
            <value>#2024-01-01#</value>
          </bin>
        </calculation>
      </column>
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column caption='df_merged_final.csv' datatype='table' name='[__tableau_internal_object_id__].[df_merged_final.csv_3671CB00EC6E4332ABF1C38B3127822C]' role='measure' type='quantitative' />
      <column caption='avg temp recent years' datatype='string' default-format='n#,##0.0;-#,##0.0' name='[avg preci recent years (copy)_5798103077755449348]' role='measure' type='nominal'>
        <calculation class='tableau' formula='STR(&#10;  ROUND(&#10;    AVG(&#10;      IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024&#10;      THEN [Temperature] &#10;      END&#10;    ), &#10;  1)&#10;) + &quot; °C&quot;' />
      </column>
      <column caption='delta precipitation' datatype='string' name='[delta climate parameter (copy)_5798103077753110530]' role='measure' type='nominal'>
        <calculation class='tableau' formula='STR(&#10;    IF &#10;        AVG(&#10;            IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 &#10;            THEN [Precipitation] &#10;            END&#10;        )&#10;        -&#10;        AVG(&#10;            IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020&#10;            THEN [Precipitation] &#10;            END&#10;        ) &gt; 0&#10;    THEN &quot;+&quot;&#10;    ELSE &quot;&quot;&#10;    END&#10;    +&#10;    STR(&#10;        ROUND(&#10;            AVG(&#10;                IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024&#10;                THEN [Precipitation] &#10;                END&#10;            )&#10;            -&#10;            AVG(&#10;                IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020&#10;                THEN [Precipitation] &#10;                END&#10;            ),&#10;        1)&#10;    )&#10;    + &quot; mm&quot;&#10;)' />
      </column>
      <column caption='delta temperature' datatype='string' name='[delta precipitation (copy)_5798103077755850757]' role='measure' type='nominal'>
        <calculation class='tableau' formula='STR(&#10;  IF &#10;    AVG(&#10;      IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] &#10;      END&#10;    )&#10;    -&#10;    AVG(&#10;      IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] &#10;      END&#10;    ) &gt; 0&#10;  THEN &quot;+&quot;&#10;  ELSE &quot;&quot;&#10;  END&#10;  +&#10;  STR(&#10;    ROUND(&#10;      AVG(&#10;        IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] &#10;        END&#10;      )&#10;      -&#10;      AVG(&#10;        IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] &#10;        END&#10;      ),&#10;    1)&#10;  )&#10;  + &quot; °C&quot;&#10;)' />
      </column>
      <column-instance column='[Calculation_5367938944472649729]' derivation='Avg' name='[avg:Calculation_5367938944472649729:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Precipitation]' derivation='Avg' name='[avg:Precipitation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temperature]' derivation='Avg' name='[avg:Temperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_5526127881437024257]' derivation='None' name='[none:Calculation_5526127881437024257:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_5367938944472649729]' derivation='Sum' name='[sum:Calculation_5367938944472649729:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Precipitation]' derivation='Sum' name='[sum:Precipitation:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Temperature]' derivation='Sum' name='[sum:Temperature:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Region,State,Decades)' hidden='true' name='[Action (Region,State,Decades)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (group)]' />
          <groupfilter function='level-members' level='[State]' />
          <groupfilter function='level-members' level='[Year (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
        </groupfilter>
      </group>
      <group caption='Action (State,Decades)' hidden='true' name='[Action (State,Decades)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State]' />
          <groupfilter function='level-members' level='[Year (group)]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Decades,Region,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Year (group)]' />
          <groupfilter function='level-members' level='[State (group)]' />
          <groupfilter function='level-members' level='[none:State:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='State (group)'>
          <field>[State (group)]</field>
          <field>[State]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='/var/folders/4f/3kkpfrvj36l44smm9z3jpzq80000gn/T/tableau-temp/TEMP_1ga07b11hheyox18ng2nl1umqpfx.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='' updated-database='/var/folders/4f/3kkpfrvj36l44smm9z3jpzq80000gn/T/tableau-temp/#TableauTemp_0yez32v1nnz5lc14437vh0pw8gkz.hyper' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Season</remote-alias>
              <ordinal>0</ordinal>
              <family>df_merged_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>1</ordinal>
              <family>df_merged_final.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>146</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>2</ordinal>
              <family>df_merged_final.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Temperature</remote-alias>
              <ordinal>3</ordinal>
              <family>df_merged_final.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1744</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Precipitation</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Precipitation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Precipitation</remote-alias>
              <ordinal>4</ordinal>
              <family>df_merged_final.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4537</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0doh8r11iozygs1bkboxa1cfier8].[sum:Precipitation:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0doh8r11iozygs1bkboxa1cfier8].[sum:Calculation_5367938944472649729:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0doh8r11iozygs1bkboxa1cfier8]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Calculation_5367938944472649729:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Temperature:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0doh8r11iozygs1bkboxa1cfier8].[sum:Temperature:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_5526127881437024257:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Warm&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cool&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#e15759'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Germany&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Region Parameter_page1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
          <calculation class='tableau' formula='&quot;West&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='Germany' />
          </aliases>
        </column>
        <column caption='Parameter Climate Periods IPCC' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
        </column>
        <column alias='Winter' caption='Season Parameter_page1' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;winter&quot;'>
          <calculation class='tableau' formula='&quot;winter&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='all Seasons' />
            <alias key='&quot;autumn&quot;' value='Autumn' />
            <alias key='&quot;spring&quot;' value='Spring' />
            <alias key='&quot;summer&quot;' value='Summer' />
            <alias key='&quot;winter&quot;' value='Winter' />
          </aliases>
        </column>
        <column caption='Select Climate Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Precipitation&quot;'>
          <calculation class='tableau' formula='&quot;Precipitation&quot;' />
        </column>
        <column caption='Region Parameter_page3' datatype='string' name='[Region Parameter_page1 (copy)_6593903205935779842]' param-domain-type='list' role='measure' type='nominal' value='&quot;East&quot;'>
          <calculation class='tableau' formula='&quot;East&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='Germany' />
          </aliases>
        </column>
        <column caption='Region Parameter_page4' datatype='string' name='[Region Parameter_page3 (copy)_6593903205941825544]' param-domain-type='list' role='measure' type='nominal' value='&quot;North&quot;'>
          <calculation class='tableau' formula='&quot;North&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='Germany' />
          </aliases>
        </column>
        <column alias='Summer' caption='Season Parameter_page2' datatype='string' name='[Season Parameter_page1 (copy)_6593903205935427585]' param-domain-type='list' role='measure' type='nominal' value='&quot;summer&quot;'>
          <calculation class='tableau' formula='&quot;summer&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='all Seasons' />
            <alias key='&quot;autumn&quot;' value='Autumn' />
            <alias key='&quot;spring&quot;' value='Spring' />
            <alias key='&quot;summer&quot;' value='Summer' />
            <alias key='&quot;winter&quot;' value='Winter' />
          </aliases>
        </column>
        <column alias='all Seasons' caption='Season Parameter_page3' datatype='string' name='[Season Parameter_page2 (copy)_6593903205935837187]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='all Seasons' />
            <alias key='&quot;autumn&quot;' value='Autumn' />
            <alias key='&quot;spring&quot;' value='Spring' />
            <alias key='&quot;summer&quot;' value='Summer' />
            <alias key='&quot;winter&quot;' value='Winter' />
          </aliases>
        </column>
      </datasource-dependencies>
      <filter class='categorical' column='[State]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[State]' />
          <groupfilter function='member' level='[State]' member='&quot;Deutschland&quot;' />
        </groupfilter>
      </filter>
      <object-graph>
        <objects>
          <object caption='df_merged_final.csv' id='df_merged_final.csv_3671CB00EC6E4332ABF1C38B3127822C'>
            <properties context=''>
              <relation connection='textscan.1b4h04o0i8yoqa0zzvbi11lpex56' name='df_merged_final.csv' table='[df_merged_final#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en' separator=','>
                  <column datatype='string' name='Season' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='1' />
                  <column datatype='string' name='State' ordinal='2' />
                  <column datatype='real' name='Temperature' ordinal='3' />
                  <column datatype='real' name='Precipitation' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_FCCD4231104443419DEE96B19EDDB30C]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='page 3' type='sheet' worksheet='Heatmap by Region' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='page 3' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_DA26CDB927014C958A3254CDC19FB57E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='page 2' type='sheet' worksheet='Choropleth Precipitation' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='page 2' />
      </command>
    </action>
    <action caption='Hyperlink1' name='[Action3_935127D52B414F93ABCE332FD5FCDBB7]'>
      <activation type='on-select' />
      <source dashboard='Page Outro' type='sheet' worksheet='Sheet 12' />
      <link caption='' expression='https://www.linkedin.com/in/fee-pieper-146479179/' />
    </action>
  </actions>
  <worksheets>
    <worksheet name='Choropleth Precipitation'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='20'><![CDATA[Average Precipitation by German's Federal States for <]]></run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='20'>[Parameters].[Season Parameter_page1 (copy)_6593903205935427585]</run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter Climate Periods IPCC' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
            <column alias='Summer' caption='Season Parameter_page2' datatype='string' name='[Season Parameter_page1 (copy)_6593903205935427585]' param-domain-type='list' role='measure' type='nominal' value='&quot;summer&quot;'>
              <calculation class='tableau' formula='&quot;summer&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='Climate Periods by IPCC' datatype='string' name='[Calculation_4694439693634560000]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF YEAR([Year]) &gt;= 1961 AND YEAR([Year]) &lt;= 1990 THEN &quot;Reference Period (1961–1990)&quot;&#10;ELSEIF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN &quot;Comparison Period (1991–2020)&quot;&#10;ELSEIF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN &quot;Recent Years (2021–2024)&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column caption='Climate Period Selector' datatype='boolean' name='[Calculation_5117778058666545152]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Recent Years (2021–2024)&quot; THEN [Calculation_4694439693634560000] = &quot;Recent Years (2021–2024)&quot;&#10;WHEN &quot;Comparison Period (1991–2020)&quot; THEN [Calculation_4694439693634560000] = &quot;Comparison Period (1991–2020)&quot;&#10;WHEN &quot;Reference Period (1961–1990)&quot; THEN [Calculation_4694439693634560000] = &quot;Reference Period (1961–1990)&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0&quot;mm&quot;;-#,##0&quot;mm&quot;' name='[Precipitation]' role='measure' type='quantitative' />
            <column caption='Season Selector_page2' datatype='boolean' name='[Season Selector (copy)_6593903205940457477]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Season Parameter_page1 (copy)_6593903205935427585] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Season Parameter_page1 (copy)_6593903205935427585])&#10;END' />
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Precipitation]' derivation='Avg' name='[avg:Precipitation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4694439693634560000]' derivation='None' name='[none:Calculation_4694439693634560000:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5117778058666545152]' derivation='None' name='[none:Calculation_5117778058666545152:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season Selector (copy)_6593903205940457477]' derivation='None' name='[none:Season Selector (copy)_6593903205940457477:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_4694439693634560000:nk]'>
            <groupfilter function='member' level='[none:Calculation_4694439693634560000:nk]' member='&quot;Recent Years (2021–2024)&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666545152:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058666545152:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector (copy)_6593903205940457477:nk]'>
            <groupfilter function='member' level='[none:Season Selector (copy)_6593903205940457477:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666545152:nk]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_4694439693634560000:nk]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector (copy)_6593903205940457477:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Longitude (generated)]' field-type='quantitative' max='2275662.4948892854' min='52618.050899269059' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Latitude (generated)]' field-type='quantitative' max='7440859.2348416187' min='5917058.8064963724' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='10' />
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='#e6e6e6' />
            <format attr='font-weight' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='bold' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='#081b26' />
            <format attr='font-weight' data-class='subtotal' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='bold' />
            <format attr='font-weight' data-class='total' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='10' />
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='#e6e6e6' />
            <format attr='font-weight' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='bold' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-size' value='12' />
            <_.fcp.IndividualControlFormatting.true...format attr='background-color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]' id='legend-color' value='#666666be' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-size' value='10' />
            <_.fcp.IndividualControlFormatting.true...format attr='text-align' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]' id='legend-color' value='center' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]' value='Avg. Precipitation'>
              <formatted-text>
                <run fontsize='12'>Avg. Precipitation</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' />
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]' />
              <color column='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]' />
              <geometry column='[federated.0doh8r11iozygs1bkboxa1cfier8].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0doh8r11iozygs1bkboxa1cfier8].[Latitude (generated)]</rows>
        <cols>[federated.0doh8r11iozygs1bkboxa1cfier8].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{6080A8D5-8CF6-4564-8BE4-40621684231E}' />
    </worksheet>
    <worksheet name='Forecast Temperature'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='20'><![CDATA[Average Temperature Forecasted for Region <]]></run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='20'>[Parameters].[Parameter 1]</run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Parameter_page1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
              <calculation class='tableau' formula='&quot;West&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='Germany' />
              </aliases>
            </column>
            <column caption='Region Parameter_page4' datatype='string' name='[Region Parameter_page3 (copy)_6593903205941825544]' param-domain-type='list' role='measure' type='nominal' value='&quot;North&quot;'>
              <calculation class='tableau' formula='&quot;North&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='Germany' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='Region Selector_page4' datatype='boolean' name='[Region Selector_page3 (copy)_6593903205941772295]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Region Parameter_page3 (copy)_6593903205941825544]&#10;WHEN &quot;East&quot; THEN [State (group)] = &quot;East&quot;&#10;WHEN &quot;West&quot; THEN [State (group)] = &quot;West&quot;&#10;WHEN &quot;South&quot; THEN [State (group)] = &quot;South&quot;&#10;WHEN &quot;North&quot; THEN [State (group)] = &quot;North&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
            </column>
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Berlin&quot;</value>
                  <value>&quot;Brandenburg&quot;</value>
                  <value>&quot;Sachsen&quot;</value>
                  <value>&quot;Sachsen-Anhalt&quot;</value>
                  <value>&quot;Thüringen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Bremen&quot;</value>
                  <value>&quot;Hamburg&quot;</value>
                  <value>&quot;Mecklenburg-Vorpommern&quot;</value>
                  <value>&quot;Niedersachsen&quot;</value>
                  <value>&quot;Schleswig-Holstein&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Baden-Württemberg&quot;</value>
                  <value>&quot;Bayern&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Hessen&quot;</value>
                  <value>&quot;Nordrhein-Westfalen&quot;</value>
                  <value>&quot;Rheinland-Pfalz&quot;</value>
                  <value>&quot;Saarland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c#,##0.0&quot;°C&quot;;-#,##0.0&quot;°C&quot;' name='[Temperature]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Temperature]' derivation='Avg' name='[avg:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Temperature]' derivation='Avg' forecast-column-base='[avg:Temperature:qk]' forecast-column-type='forecast-value' name='[fVal:avg:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region Selector_page3 (copy)_6593903205941772295]' derivation='None' name='[none:Region Selector_page3 (copy)_6593903205941772295:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Region Selector_page3 (copy)_6593903205941772295:nk]'>
            <groupfilter function='member' level='[none:Region Selector_page3 (copy)_6593903205941772295:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Region Selector_page3 (copy)_6593903205941772295:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='width' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[fVal:avg:Temperature:qk]' value='76' />
            <format attr='width' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[fVal:avg:Temperature:qk]' value='76' />
            <encoding attr='space' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[fVal:avg:Temperature:qk]' field-type='quantitative' max='12.699210212358599' min='6.0' range-type='fixed' scope='rows' type='space' />
            <format attr='auto-subtitle' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[fVal:avg:Temperature:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' field-type='quantitative' max='#2053-03-21 00:00:00#' min='#1885-07-03 00:00:00#' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[fVal:avg:Temperature:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='rows' value='#e6e6e6' />
            <format attr='color' scope='cols' value='#e6e6e6' />
            <format attr='font-size' scope='cols' value='11' />
            <format attr='font-size' scope='rows' value='11' />
            <format attr='font-weight' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[fVal:avg:Temperature:qk]' value='bold' />
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[fVal:avg:Temperature:qk]' value='12' />
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#00000000' />
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-width' data-class='total' scope='rows' value='0' />
            <format attr='border-style' data-class='total' scope='rows' value='none' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='text-orientation' id='refline1' value='-90' />
            <format attr='font-weight' id='refline1' value='bold' />
            <format attr='background-color' id='refline1' value='#ffffff00' />
            <format attr='font-weight' id='refline0' value='bold' />
            <format attr='background-color' id='refline0' value='#ffffff00' />
            <format attr='text-orientation' id='refline0' value='-90' />
            <format attr='vertical-align' id='refline0' value='bottom' />
            <format attr='text-align' id='refline0' value='left' />
            <format attr='text-align' id='refline1' value='left' />
            <format attr='color' id='refline0' value='#e6e6e6' />
            <format attr='color' id='refline1' value='#e6e6e6' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
            <format attr='text-align' id='refline2' value='left' />
            <format attr='text-orientation' id='refline2' value='-90' />
            <format attr='color' id='refline2' value='#e6e6e6' />
            <format attr='font-weight' id='refline2' value='bold' />
            <format attr='background-color' id='refline2' value='#ffffff00' />
            <format attr='fill-above' id='refline3' value='#00000000' />
            <format attr='fill-below' id='refline3' value='#00000000' />
            <format attr='text-align' id='refline3' value='left' />
            <format attr='text-orientation' id='refline3' value='-90' />
            <format attr='color' id='refline3' value='#e6e6e6' />
            <format attr='font-weight' id='refline3' value='bold' />
            <format attr='stroke-size' id='refline2' value='2' />
            <format attr='stroke-color' id='refline2' value='#f28e2b' />
            <format attr='stroke-color' id='refline3' value='#f28e2b' />
            <format attr='stroke-size' id='refline3' value='2' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#f28e2b' />
            <format attr='stroke-size' id='refline1' value='2' />
            <format attr='stroke-color' id='refline1' value='#f28e2b' />
            <format attr='background-color' id='refline3' value='#ffffff00' />
            <format attr='stroke-size' value='1' />
            <format attr='font-size' id='refline2' value='12' />
            <format attr='font-size' id='refline3' value='12' />
            <format attr='font-size' id='refline0' value='12' />
            <format attr='font-size' id='refline1' value='12' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
            <format attr='color' value='#e6e6e6' />
            <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Forecast Indicator:nk]' id='legend-color' value='12' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Forecast Indicator:nk]' value='Forecast Indicator'>
              <formatted-text>
                <run bold='true' fontsize='14'>Forecast Indicator</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <reference-line axis-column='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label='EU Climate Target Plan by 2030' label-type='custom' scope='per-pane' tooltip='The EU aims to reduce net greenhouse gas emissions by at least 55% compared to 1990 levels by 2030.Germany aligns with this goal and implements sector-specific measures to meet the target.' tooltip-type='custom' value='#2030-01-01 00:00:00#' value-column='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' z-order='1' />
            <reference-line axis-column='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label='Net-Zero Emissions by 2045' label-type='custom' scope='per-pane' tooltip='Germany aims to achieve climate neutrality by 2045, five years ahead of the EU’s 2050 target.This means net-zero greenhouse gas emissions through a combination of emissions reductions and offsetting.' tooltip-type='custom' value='#2045-01-01 00:00:00#' value-column='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' z-order='2' />
            <reference-line axis-column='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline2' label='Koyoto Protocol in force (2006)' label-type='custom' scope='per-pane' tooltip='First binding climate treaty.Germany committed to significant CO₂ reductions.' tooltip-type='custom' value='#2006-01-01 00:00:00#' value-column='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' z-order='3' />
            <reference-line axis-column='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' enable-instant-analytics='true' formula='constant' id='refline3' label='Paris Agreement in force (2015)' label-type='custom' scope='per-pane' tooltip='Adopted by 196 countries at COP21, the Paris Agreement sets a global framework to limit global warming to well below 2°C, and ideally to 1.5°C above pre-industrial levels.Germany and the EU are signatories, committing to long-term emissions reductions and regular progress reviews.' tooltip-type='custom' value='#2015-01-01 00:00:00#' value-column='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' z-order='4' />
          </pane>
        </panes>
        <rows>[federated.0doh8r11iozygs1bkboxa1cfier8].[fVal:avg:Temperature:qk]</rows>
        <cols>[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{6355C22F-C019-4172-8236-C518B6F230F0}' />
    </worksheet>
    <worksheet name='Heatmap by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e6e6e6' fontname='Tableau Medium' fontsize='20'><![CDATA[Decadal Temperature Trends by Germany's Federal States for <]]></run>
            <run fontcolor='#e6e6e6' fontname='Tableau Medium' fontsize='20'>[Parameters].[Season Parameter_page2 (copy)_6593903205935837187]</run>
            <run fontcolor='#e6e6e6' fontname='Tableau Medium' fontsize='20'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter Climate Periods IPCC' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
            </column>
            <column alias='all Seasons' caption='Season Parameter_page3' datatype='string' name='[Season Parameter_page2 (copy)_6593903205935837187]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='Climate Periods by IPCC' datatype='string' name='[Calculation_4694439693634560000]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF YEAR([Year]) &gt;= 1961 AND YEAR([Year]) &lt;= 1990 THEN &quot;Reference Period (1961–1990)&quot;&#10;ELSEIF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN &quot;Comparison Period (1991–2020)&quot;&#10;ELSEIF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN &quot;Recent Years (2021–2024)&quot;&#10;ELSE &quot;Other&quot;&#10;END' />
            </column>
            <column caption='Climate Period Selector' datatype='boolean' name='[Calculation_5117778058666545152]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 2]&#10;WHEN &quot;Recent Years (2021–2024)&quot; THEN [Calculation_4694439693634560000] = &quot;Recent Years (2021–2024)&quot;&#10;WHEN &quot;Comparison Period (1991–2020)&quot; THEN [Calculation_4694439693634560000] = &quot;Comparison Period (1991–2020)&quot;&#10;WHEN &quot;Reference Period (1961–1990)&quot; THEN [Calculation_4694439693634560000] = &quot;Reference Period (1961–1990)&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
            </column>
            <column caption='Season Selector_page3' datatype='boolean' name='[Season Selector_page2 (copy)_6593903205941587974]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Season Parameter_page2 (copy)_6593903205935837187] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Season Parameter_page2 (copy)_6593903205935837187])&#10;END' />
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Berlin&quot;</value>
                  <value>&quot;Brandenburg&quot;</value>
                  <value>&quot;Sachsen&quot;</value>
                  <value>&quot;Sachsen-Anhalt&quot;</value>
                  <value>&quot;Thüringen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Bremen&quot;</value>
                  <value>&quot;Hamburg&quot;</value>
                  <value>&quot;Mecklenburg-Vorpommern&quot;</value>
                  <value>&quot;Niedersachsen&quot;</value>
                  <value>&quot;Schleswig-Holstein&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Baden-Württemberg&quot;</value>
                  <value>&quot;Bayern&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Hessen&quot;</value>
                  <value>&quot;Nordrhein-Westfalen&quot;</value>
                  <value>&quot;Rheinland-Pfalz&quot;</value>
                  <value>&quot;Saarland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c#,##0.0&quot;°C&quot;;-#,##0.0&quot;°C&quot;' name='[Temperature]' role='measure' type='quantitative' />
            <column caption='Decades' datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Year]' new-bin='true'>
                <bin default-name='false' value='&quot;1880s&quot;'>
                  <value>#1881-01-01#</value>
                  <value>#1882-01-01#</value>
                  <value>#1883-01-01#</value>
                  <value>#1884-01-01#</value>
                  <value>#1885-01-01#</value>
                  <value>#1886-01-01#</value>
                  <value>#1887-01-01#</value>
                  <value>#1888-01-01#</value>
                  <value>#1889-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1890s&quot;'>
                  <value>#1890-01-01#</value>
                  <value>#1891-01-01#</value>
                  <value>#1892-01-01#</value>
                  <value>#1893-01-01#</value>
                  <value>#1894-01-01#</value>
                  <value>#1895-01-01#</value>
                  <value>#1896-01-01#</value>
                  <value>#1897-01-01#</value>
                  <value>#1898-01-01#</value>
                  <value>#1899-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1900s&quot;'>
                  <value>#1900-01-01#</value>
                  <value>#1901-01-01#</value>
                  <value>#1902-01-01#</value>
                  <value>#1903-01-01#</value>
                  <value>#1904-01-01#</value>
                  <value>#1905-01-01#</value>
                  <value>#1906-01-01#</value>
                  <value>#1907-01-01#</value>
                  <value>#1908-01-01#</value>
                  <value>#1909-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1910s&quot;'>
                  <value>#1910-01-01#</value>
                  <value>#1911-01-01#</value>
                  <value>#1912-01-01#</value>
                  <value>#1913-01-01#</value>
                  <value>#1914-01-01#</value>
                  <value>#1915-01-01#</value>
                  <value>#1916-01-01#</value>
                  <value>#1917-01-01#</value>
                  <value>#1918-01-01#</value>
                  <value>#1919-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1920s&quot;'>
                  <value>#1920-01-01#</value>
                  <value>#1921-01-01#</value>
                  <value>#1922-01-01#</value>
                  <value>#1923-01-01#</value>
                  <value>#1924-01-01#</value>
                  <value>#1925-01-01#</value>
                  <value>#1926-01-01#</value>
                  <value>#1927-01-01#</value>
                  <value>#1928-01-01#</value>
                  <value>#1929-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1930s&quot;'>
                  <value>#1930-01-01#</value>
                  <value>#1931-01-01#</value>
                  <value>#1932-01-01#</value>
                  <value>#1933-01-01#</value>
                  <value>#1934-01-01#</value>
                  <value>#1935-01-01#</value>
                  <value>#1936-01-01#</value>
                  <value>#1937-01-01#</value>
                  <value>#1938-01-01#</value>
                  <value>#1939-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1940s&quot;'>
                  <value>#1940-01-01#</value>
                  <value>#1941-01-01#</value>
                  <value>#1942-01-01#</value>
                  <value>#1943-01-01#</value>
                  <value>#1944-01-01#</value>
                  <value>#1945-01-01#</value>
                  <value>#1946-01-01#</value>
                  <value>#1947-01-01#</value>
                  <value>#1948-01-01#</value>
                  <value>#1949-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1950s&quot;'>
                  <value>#1950-01-01#</value>
                  <value>#1951-01-01#</value>
                  <value>#1952-01-01#</value>
                  <value>#1953-01-01#</value>
                  <value>#1954-01-01#</value>
                  <value>#1955-01-01#</value>
                  <value>#1956-01-01#</value>
                  <value>#1957-01-01#</value>
                  <value>#1958-01-01#</value>
                  <value>#1959-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1960s&quot;'>
                  <value>#1960-01-01#</value>
                  <value>#1961-01-01#</value>
                  <value>#1962-01-01#</value>
                  <value>#1963-01-01#</value>
                  <value>#1964-01-01#</value>
                  <value>#1965-01-01#</value>
                  <value>#1966-01-01#</value>
                  <value>#1967-01-01#</value>
                  <value>#1968-01-01#</value>
                  <value>#1969-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1970s&quot;'>
                  <value>#1970-01-01#</value>
                  <value>#1971-01-01#</value>
                  <value>#1972-01-01#</value>
                  <value>#1973-01-01#</value>
                  <value>#1974-01-01#</value>
                  <value>#1975-01-01#</value>
                  <value>#1976-01-01#</value>
                  <value>#1977-01-01#</value>
                  <value>#1978-01-01#</value>
                  <value>#1979-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1980s&quot;'>
                  <value>#1980-01-01#</value>
                  <value>#1981-01-01#</value>
                  <value>#1982-01-01#</value>
                  <value>#1983-01-01#</value>
                  <value>#1984-01-01#</value>
                  <value>#1985-01-01#</value>
                  <value>#1986-01-01#</value>
                  <value>#1987-01-01#</value>
                  <value>#1988-01-01#</value>
                  <value>#1989-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1990s&quot;'>
                  <value>#1990-01-01#</value>
                  <value>#1991-01-01#</value>
                  <value>#1992-01-01#</value>
                  <value>#1993-01-01#</value>
                  <value>#1994-01-01#</value>
                  <value>#1995-01-01#</value>
                  <value>#1996-01-01#</value>
                  <value>#1997-01-01#</value>
                  <value>#1998-01-01#</value>
                  <value>#1999-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2000s&quot;'>
                  <value>#2000-01-01#</value>
                  <value>#2001-01-01#</value>
                  <value>#2002-01-01#</value>
                  <value>#2003-01-01#</value>
                  <value>#2004-01-01#</value>
                  <value>#2005-01-01#</value>
                  <value>#2006-01-01#</value>
                  <value>#2007-01-01#</value>
                  <value>#2008-01-01#</value>
                  <value>#2009-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2010s&quot;'>
                  <value>#2010-01-01#</value>
                  <value>#2011-01-01#</value>
                  <value>#2012-01-01#</value>
                  <value>#2013-01-01#</value>
                  <value>#2014-01-01#</value>
                  <value>#2015-01-01#</value>
                  <value>#2016-01-01#</value>
                  <value>#2017-01-01#</value>
                  <value>#2018-01-01#</value>
                  <value>#2019-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2020s&quot;'>
                  <value>#2020-01-01#</value>
                  <value>#2021-01-01#</value>
                  <value>#2022-01-01#</value>
                  <value>#2023-01-01#</value>
                  <value>#2024-01-01#</value>
                </bin>
              </calculation>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Temperature]' derivation='Avg' name='[avg:Temperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5117778058666545152]' derivation='None' name='[none:Calculation_5117778058666545152:nk]' pivot='key' type='nominal' />
            <column-instance column='[Season Selector_page2 (copy)_6593903205941587974]' derivation='None' name='[none:Season Selector_page2 (copy)_6593903205941587974:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666545152:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058666545152:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector_page2 (copy)_6593903205941587974:nk]'>
            <groupfilter function='member' level='[none:Season Selector_page2 (copy)_6593903205941587974:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666545152:nk]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector_page2 (copy)_6593903205941587974:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]' value='61' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]' value='12' />
            <format attr='text-align' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]' value='21' />
            <format attr='height-header' value='15' />
            <format attr='width' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='212' />
            <format attr='width' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[State (group)]' value='100' />
            <format attr='background-color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]' value='#081b26' />
            <format attr='background-color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='#081b26' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
            <format attr='background-color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[State (group)]' value='#081b26' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#081b26' />
            <format attr='color' value='#e6e6e6' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='background-color' value='#081b26' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='14' />
            <format attr='vertical-align' value='bottom' />
            <format attr='wrap' value='auto' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='background-color' scope='rows' value='#081b26' />
            <format attr='background-color' scope='cols' value='#081b26' />
            <format attr='font-weight' scope='rows' value='normal' />
            <format attr='font-weight' scope='cols' value='normal' />
            <format attr='font-size' scope='cols' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]' value='#e6e6e6' />
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='#e6e6e6' />
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[State (group)]' value='#e6e6e6' />
            <format attr='font-weight' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[State (group)]' value='bold' />
            <format attr='text-align' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]' value='center' />
            <format attr='font-weight' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]' value='bold' />
            <format attr='font-weight' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='bold' />
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[State (group)]' value='12' />
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]' value='12' />
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]' value='12' />
            <format attr='text-align' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[State (group)]' value='center' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Temperature:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#e6e6e6' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Temperature:qk]' value='Avg. Temperature'>
              <formatted-text>
                <run fontsize='14'>Avg. Temperature</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-width' value='0' />
            <format attr='color' value='#f7cf46' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Temperature:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0doh8r11iozygs1bkboxa1cfier8].[State (group)] / [federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk])</rows>
        <cols>[federated.0doh8r11iozygs1bkboxa1cfier8].[Year (group)]</cols>
      </table>
      <simple-id uuid='{DC223503-5D2C-4EE1-B3B8-609D76481194}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
          </datasources>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='LinkedIn' datatype='string' name='[Calculation_6694319403922849792]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;Connect with me on LinkedIn. Click here.&quot;' />
            </column>
            <column-instance column='[Calculation_6694319403922849792]' derivation='None' name='[none:Calculation_6694319403922849792:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='622' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Bold' />
            <format attr='font-size' value='24' />
            <format attr='color' value='#e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_6694319403922849792:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{302FFC7B-C01F-4618-A2E5-A5567BEB5AAA}' />
    </worksheet>
    <worksheet name='Time Series (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='22'>Average &lt;</run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='22'>[Parameters].[Parameter 4]</run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='22'>&gt; in Region &lt;</run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='22'>[Parameters].[Parameter 1]</run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='22'>&gt; for &lt;</run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='22'>[Parameters].[Parameter 3]</run>
            <run fontcolor='#e6e6e6' fontname='Tableau Regular' fontsize='22'>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Parameter_page1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
              <calculation class='tableau' formula='&quot;West&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='Germany' />
              </aliases>
            </column>
            <column alias='Winter' caption='Season Parameter_page1' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;winter&quot;'>
              <calculation class='tableau' formula='&quot;winter&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
            <column caption='Select Climate Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Precipitation&quot;'>
              <calculation class='tableau' formula='&quot;Precipitation&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='Region Selector' datatype='boolean' name='[Calculation_5117778058666921985]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;East&quot; THEN [State (group)] = &quot;East&quot;&#10;WHEN &quot;West&quot; THEN [State (group)] = &quot;West&quot;&#10;WHEN &quot;South&quot; THEN [State (group)] = &quot;South&quot;&#10;WHEN &quot;North&quot; THEN [State (group)] = &quot;North&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
            </column>
            <column caption='Season Selector' datatype='boolean' name='[Calculation_5117778058668744708]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Parameter 3])&#10;END' />
            </column>
            <column caption='Temp/Preci Selector' datatype='real' name='[Calculation_5367938944472649729]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF  [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN [Temperature]&#10;ELSE [Precipitation]&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0&quot;mm&quot;;-#,##0&quot;mm&quot;' name='[Precipitation]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Berlin&quot;</value>
                  <value>&quot;Brandenburg&quot;</value>
                  <value>&quot;Sachsen&quot;</value>
                  <value>&quot;Sachsen-Anhalt&quot;</value>
                  <value>&quot;Thüringen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Bremen&quot;</value>
                  <value>&quot;Hamburg&quot;</value>
                  <value>&quot;Mecklenburg-Vorpommern&quot;</value>
                  <value>&quot;Niedersachsen&quot;</value>
                  <value>&quot;Schleswig-Holstein&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Baden-Württemberg&quot;</value>
                  <value>&quot;Bayern&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Hessen&quot;</value>
                  <value>&quot;Nordrhein-Westfalen&quot;</value>
                  <value>&quot;Rheinland-Pfalz&quot;</value>
                  <value>&quot;Saarland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c#,##0.0&quot;°C&quot;;-#,##0.0&quot;°C&quot;' name='[Temperature]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_5367938944472649729]' derivation='Avg' name='[avg:Calculation_5367938944472649729:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5117778058666921985]' derivation='None' name='[none:Calculation_5117778058666921985:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5117778058668744708]' derivation='None' name='[none:Calculation_5117778058668744708:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666921985:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058666921985:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058668744708:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058668744708:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666921985:nk]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058668744708:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Calculation_5367938944472649729:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Calculation_5367938944472649729:qk]' field-type='quantitative' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' field-type='quantitative' max='#2031-05-25 00:00:00#' min='#1885-08-10 00:00:00#' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' scope='cols' value='#f7cf46' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='color' data-class='subtotal' scope='cols' value='#f7cf46' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#f7cf46' />
            <format attr='color' scope='rows' value='#f7cf46' />
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' value='#e6e6e6' />
            <format attr='color' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Calculation_5367938944472649729:qk]' value='#e6e6e6' />
            <format attr='font-weight' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' value='normal' />
            <format attr='font-weight' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Calculation_5367938944472649729:qk]' value='bold' />
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' value='12' />
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Calculation_5367938944472649729:qk]' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#00000000' />
            <format attr='band-color' scope='cols' value='#00000000' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
            <format attr='band-size' scope='cols' value='1' />
            <format attr='band-size' scope='rows' value='0' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' value='#e157594b' />
            <format attr='stroke-size' id='refline0' value='4' />
            <format attr='stroke-color' id='refline0' value='#e90a12' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='stroke-size' id='refline1' value='4' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='font-weight' id='refline1' value='bold' />
            <format attr='color' id='refline1' value='#ffffff' />
            <format attr='text-align' id='refline1' value='left' />
            <format attr='text-orientation' id='refline1' value='-90' />
            <format attr='background-color' id='refline1' value='#ffffff00' />
            <format attr='stroke-color' id='refline1' value='#e1575900' />
            <format attr='color' id='refline0' value='#ffffff' />
            <format attr='font-weight' id='refline0' value='bold' />
            <format attr='text-align' id='refline0' value='left' />
            <format attr='text-orientation' id='refline0' value='-90' />
            <format attr='background-color' id='refline0' value='#ffffff04' />
            <format attr='font-size' id='refline0' value='10' />
            <format attr='font-size' id='refline1' value='10' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='font-size' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Calculation_5367938944472649729:qk]' value='10' />
            <format attr='font-weight' field='[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]' value='bold' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Parameter 1]' value='Region Parameter'>
              <formatted-text>
                <run fontcolor='#aeaeae' fontsize='12'>Region Parameter</run>
              </formatted-text>
            </format>
            <format attr='title' field='[Parameters].[Parameter 3]' value='Season Parameter'>
              <formatted-text>
                <run fontcolor='#aeaeae' fontsize='11'>Season Parameter</run>
              </formatted-text>
            </format>
            <format attr='title' field='[Parameters].[Parameter 4]' value='Select Temperature/ Precipitation'>
              <formatted-text>
                <run fontcolor='#aeaeae' fontsize='11'>Select Temperature/ Precipitation</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <dropline drop-when='selected' haslabel='false' x-axis='true' y-axis='false' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#205b80' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-color' value='#f7cf46' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Calculation_5367938944472649729:qk]</rows>
        <cols>[federated.0doh8r11iozygs1bkboxa1cfier8].[tyr:Year:qk]</cols>
      </table>
      <simple-id uuid='{866FD3C3-53E9-4FC5-B5DF-86FF86822813}' />
    </worksheet>
    <worksheet name='avg climate value comparison period'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular' fontsize='14'>Average</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular' fontsize='14'>&lt;[Parameters].[Parameter 4]&gt;</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular' fontsize='14'>in 1991-2020 in Region</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular' fontsize='14'>&lt;[Parameters].[Parameter 1]&gt; </run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular' fontsize='14'>in &lt;[Parameters].[Parameter 3]&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Parameter_page1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
              <calculation class='tableau' formula='&quot;West&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='Germany' />
              </aliases>
            </column>
            <column alias='Winter' caption='Season Parameter_page1' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;winter&quot;'>
              <calculation class='tableau' formula='&quot;winter&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
            <column caption='Select Climate Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Precipitation&quot;'>
              <calculation class='tableau' formula='&quot;Precipitation&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='Region Selector' datatype='boolean' name='[Calculation_5117778058666921985]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;East&quot; THEN [State (group)] = &quot;East&quot;&#10;WHEN &quot;West&quot; THEN [State (group)] = &quot;West&quot;&#10;WHEN &quot;South&quot; THEN [State (group)] = &quot;South&quot;&#10;WHEN &quot;North&quot; THEN [State (group)] = &quot;North&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
            </column>
            <column caption='Season Selector' datatype='boolean' name='[Calculation_5117778058668744708]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Parameter 3])&#10;END' />
            </column>
            <column caption='avg climate parameter comparison period ' datatype='string' name='[Calculation_5731745351976423425]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN&#10;    STR(ROUND(AVG(&#10;        IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] END&#10;    ), 1)) + &quot; °C&quot;&#10;ELSE&#10;    STR(ROUND(AVG(&#10;        IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Precipitation] END&#10;    ), 1)) + &quot; mm&quot;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0&quot;mm&quot;;-#,##0&quot;mm&quot;' name='[Precipitation]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Berlin&quot;</value>
                  <value>&quot;Brandenburg&quot;</value>
                  <value>&quot;Sachsen&quot;</value>
                  <value>&quot;Sachsen-Anhalt&quot;</value>
                  <value>&quot;Thüringen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Bremen&quot;</value>
                  <value>&quot;Hamburg&quot;</value>
                  <value>&quot;Mecklenburg-Vorpommern&quot;</value>
                  <value>&quot;Niedersachsen&quot;</value>
                  <value>&quot;Schleswig-Holstein&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Baden-Württemberg&quot;</value>
                  <value>&quot;Bayern&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Hessen&quot;</value>
                  <value>&quot;Nordrhein-Westfalen&quot;</value>
                  <value>&quot;Rheinland-Pfalz&quot;</value>
                  <value>&quot;Saarland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c#,##0.0&quot;°C&quot;;-#,##0.0&quot;°C&quot;' name='[Temperature]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_5117778058666921985]' derivation='None' name='[none:Calculation_5117778058666921985:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5117778058668744708]' derivation='None' name='[none:Calculation_5117778058668744708:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5731745351976423425]' derivation='User' name='[usr:Calculation_5731745351976423425:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666921985:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058666921985:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058668744708:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058668744708:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058668744708:nk]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666921985:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='126' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-family' value='Tableau Regular' />
            <format attr='font-style' value='italic' />
            <format attr='font-size' value='14' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[usr:Calculation_5731745351976423425:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9B71FA08-E723-42D8-B155-2B509A0509C9}' />
    </worksheet>
    <worksheet name='avg climate value recent years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular'>Average &lt;</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular'>[Parameters].[Parameter 4]</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular'>&gt; in 2021-2024 Region &lt;</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular'>[Parameters].[Parameter 1]</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular'>&gt; in &lt;</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular'>[Parameters].[Parameter 3]</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular'>&gt;:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Parameter_page1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
              <calculation class='tableau' formula='&quot;West&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='Germany' />
              </aliases>
            </column>
            <column alias='Winter' caption='Season Parameter_page1' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;winter&quot;'>
              <calculation class='tableau' formula='&quot;winter&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
            <column caption='Select Climate Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Precipitation&quot;'>
              <calculation class='tableau' formula='&quot;Precipitation&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='Region Selector' datatype='boolean' name='[Calculation_5117778058666921985]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;East&quot; THEN [State (group)] = &quot;East&quot;&#10;WHEN &quot;West&quot; THEN [State (group)] = &quot;West&quot;&#10;WHEN &quot;South&quot; THEN [State (group)] = &quot;South&quot;&#10;WHEN &quot;North&quot; THEN [State (group)] = &quot;North&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
            </column>
            <column caption='Season Selector' datatype='boolean' name='[Calculation_5117778058668744708]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Parameter 3])&#10;END' />
            </column>
            <column caption='Avg. climate parameter recent years' datatype='string' default-format='n#,##0.0;-#,##0.0' name='[Calculation_5680305799972806656]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN&#10;    STR(ROUND(AVG(&#10;        IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] END&#10;    ), 1)) + &quot; °C&quot;&#10;ELSE&#10;    STR(ROUND(AVG(&#10;        IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Precipitation] END&#10;    ), 1)) + &quot; mm&quot;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0&quot;mm&quot;;-#,##0&quot;mm&quot;' name='[Precipitation]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Berlin&quot;</value>
                  <value>&quot;Brandenburg&quot;</value>
                  <value>&quot;Sachsen&quot;</value>
                  <value>&quot;Sachsen-Anhalt&quot;</value>
                  <value>&quot;Thüringen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Bremen&quot;</value>
                  <value>&quot;Hamburg&quot;</value>
                  <value>&quot;Mecklenburg-Vorpommern&quot;</value>
                  <value>&quot;Niedersachsen&quot;</value>
                  <value>&quot;Schleswig-Holstein&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Baden-Württemberg&quot;</value>
                  <value>&quot;Bayern&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Hessen&quot;</value>
                  <value>&quot;Nordrhein-Westfalen&quot;</value>
                  <value>&quot;Rheinland-Pfalz&quot;</value>
                  <value>&quot;Saarland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c#,##0.0&quot;°C&quot;;-#,##0.0&quot;°C&quot;' name='[Temperature]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_5117778058666921985]' derivation='None' name='[none:Calculation_5117778058666921985:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5117778058668744708]' derivation='None' name='[none:Calculation_5117778058668744708:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5680305799972806656]' derivation='User' name='[usr:Calculation_5680305799972806656:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666921985:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058666921985:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058668744708:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058668744708:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058668744708:nk]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666921985:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='126' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-family' value='Tableau Regular' />
            <format attr='font-style' value='italic' />
            <format attr='font-size' value='15' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[usr:Calculation_5680305799972806656:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1AD658B9-A576-4281-8139-AE810C28C125}' />
    </worksheet>
    <worksheet name='avg precipitation recent years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular' fontsize='16'>Average Precipitation</run>
            <run>Æ&#10;</run>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular' fontsize='16'><![CDATA[in 2021-2024 in <[Parameters].[Season Parameter_page1 (copy)_6593903205935427585]>:]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Summer' caption='Season Parameter_page2' datatype='string' name='[Season Parameter_page1 (copy)_6593903205935427585]' param-domain-type='list' role='measure' type='nominal' value='&quot;summer&quot;'>
              <calculation class='tableau' formula='&quot;summer&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='avg preci recent years' datatype='string' default-format='n#,##0.0;-#,##0.0' name='[Avg. climate parameter recent years (copy)_5798103077752119297]' role='measure' type='nominal'>
              <calculation class='tableau' formula='STR(&#10;  ROUND(&#10;    AVG(&#10;      IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 &#10;      THEN [Precipitation] &#10;      END&#10;    ), &#10;  1)&#10;) + &quot; mm&quot;' />
            </column>
            <column datatype='real' default-format='n#,##0&quot;mm&quot;;-#,##0&quot;mm&quot;' name='[Precipitation]' role='measure' type='quantitative' />
            <column caption='Season Selector_page2' datatype='boolean' name='[Season Selector (copy)_6593903205940457477]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Season Parameter_page1 (copy)_6593903205935427585] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Season Parameter_page1 (copy)_6593903205935427585])&#10;END' />
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Season Selector (copy)_6593903205940457477]' derivation='None' name='[none:Season Selector (copy)_6593903205940457477:nk]' pivot='key' type='nominal' />
            <column-instance column='[Avg. climate parameter recent years (copy)_5798103077752119297]' derivation='User' name='[usr:Avg. climate parameter recent years (copy)_5798103077752119297:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]'>
            <groupfilter function='member' level='[State]' member='&quot;Hessen&quot;' user:ui-action-filter='[Action2_A5C13B27447E4EDA86A72D5AD307C8D2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector (copy)_6593903205940457477:nk]'>
            <groupfilter function='member' level='[none:Season Selector (copy)_6593903205940457477:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector (copy)_6593903205940457477:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='126' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-family' value='Tableau Regular' />
            <format attr='font-style' value='italic' />
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[usr:Avg. climate parameter recent years (copy)_5798103077752119297:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{58D95FD9-16B9-4E2E-8540-738998518D53}' />
    </worksheet>
    <worksheet name='avg temp recent years'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#d84e47' fontname='Tableau Regular' fontsize='16'><![CDATA[Average Temperature in 2021-2024 in <]]></run>
            <run bold='true' fontcolor='#d84e47' fontname='Tableau Regular' fontsize='16'>[Parameters].[Season Parameter_page2 (copy)_6593903205935837187]</run>
            <run bold='true' fontcolor='#d84e47' fontname='Tableau Regular' fontsize='16'>&gt;: </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='all Seasons' caption='Season Parameter_page3' datatype='string' name='[Season Parameter_page2 (copy)_6593903205935837187]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='Season Selector_page3' datatype='boolean' name='[Season Selector_page2 (copy)_6593903205941587974]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Season Parameter_page2 (copy)_6593903205935837187] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Season Parameter_page2 (copy)_6593903205935837187])&#10;END' />
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Berlin&quot;</value>
                  <value>&quot;Brandenburg&quot;</value>
                  <value>&quot;Sachsen&quot;</value>
                  <value>&quot;Sachsen-Anhalt&quot;</value>
                  <value>&quot;Thüringen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Bremen&quot;</value>
                  <value>&quot;Hamburg&quot;</value>
                  <value>&quot;Mecklenburg-Vorpommern&quot;</value>
                  <value>&quot;Niedersachsen&quot;</value>
                  <value>&quot;Schleswig-Holstein&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Baden-Württemberg&quot;</value>
                  <value>&quot;Bayern&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Hessen&quot;</value>
                  <value>&quot;Nordrhein-Westfalen&quot;</value>
                  <value>&quot;Rheinland-Pfalz&quot;</value>
                  <value>&quot;Saarland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c#,##0.0&quot;°C&quot;;-#,##0.0&quot;°C&quot;' name='[Temperature]' role='measure' type='quantitative' />
            <column caption='Decades' datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Year]' new-bin='true'>
                <bin default-name='false' value='&quot;1880s&quot;'>
                  <value>#1881-01-01#</value>
                  <value>#1882-01-01#</value>
                  <value>#1883-01-01#</value>
                  <value>#1884-01-01#</value>
                  <value>#1885-01-01#</value>
                  <value>#1886-01-01#</value>
                  <value>#1887-01-01#</value>
                  <value>#1888-01-01#</value>
                  <value>#1889-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1890s&quot;'>
                  <value>#1890-01-01#</value>
                  <value>#1891-01-01#</value>
                  <value>#1892-01-01#</value>
                  <value>#1893-01-01#</value>
                  <value>#1894-01-01#</value>
                  <value>#1895-01-01#</value>
                  <value>#1896-01-01#</value>
                  <value>#1897-01-01#</value>
                  <value>#1898-01-01#</value>
                  <value>#1899-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1900s&quot;'>
                  <value>#1900-01-01#</value>
                  <value>#1901-01-01#</value>
                  <value>#1902-01-01#</value>
                  <value>#1903-01-01#</value>
                  <value>#1904-01-01#</value>
                  <value>#1905-01-01#</value>
                  <value>#1906-01-01#</value>
                  <value>#1907-01-01#</value>
                  <value>#1908-01-01#</value>
                  <value>#1909-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1910s&quot;'>
                  <value>#1910-01-01#</value>
                  <value>#1911-01-01#</value>
                  <value>#1912-01-01#</value>
                  <value>#1913-01-01#</value>
                  <value>#1914-01-01#</value>
                  <value>#1915-01-01#</value>
                  <value>#1916-01-01#</value>
                  <value>#1917-01-01#</value>
                  <value>#1918-01-01#</value>
                  <value>#1919-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1920s&quot;'>
                  <value>#1920-01-01#</value>
                  <value>#1921-01-01#</value>
                  <value>#1922-01-01#</value>
                  <value>#1923-01-01#</value>
                  <value>#1924-01-01#</value>
                  <value>#1925-01-01#</value>
                  <value>#1926-01-01#</value>
                  <value>#1927-01-01#</value>
                  <value>#1928-01-01#</value>
                  <value>#1929-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1930s&quot;'>
                  <value>#1930-01-01#</value>
                  <value>#1931-01-01#</value>
                  <value>#1932-01-01#</value>
                  <value>#1933-01-01#</value>
                  <value>#1934-01-01#</value>
                  <value>#1935-01-01#</value>
                  <value>#1936-01-01#</value>
                  <value>#1937-01-01#</value>
                  <value>#1938-01-01#</value>
                  <value>#1939-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1940s&quot;'>
                  <value>#1940-01-01#</value>
                  <value>#1941-01-01#</value>
                  <value>#1942-01-01#</value>
                  <value>#1943-01-01#</value>
                  <value>#1944-01-01#</value>
                  <value>#1945-01-01#</value>
                  <value>#1946-01-01#</value>
                  <value>#1947-01-01#</value>
                  <value>#1948-01-01#</value>
                  <value>#1949-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1950s&quot;'>
                  <value>#1950-01-01#</value>
                  <value>#1951-01-01#</value>
                  <value>#1952-01-01#</value>
                  <value>#1953-01-01#</value>
                  <value>#1954-01-01#</value>
                  <value>#1955-01-01#</value>
                  <value>#1956-01-01#</value>
                  <value>#1957-01-01#</value>
                  <value>#1958-01-01#</value>
                  <value>#1959-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1960s&quot;'>
                  <value>#1960-01-01#</value>
                  <value>#1961-01-01#</value>
                  <value>#1962-01-01#</value>
                  <value>#1963-01-01#</value>
                  <value>#1964-01-01#</value>
                  <value>#1965-01-01#</value>
                  <value>#1966-01-01#</value>
                  <value>#1967-01-01#</value>
                  <value>#1968-01-01#</value>
                  <value>#1969-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1970s&quot;'>
                  <value>#1970-01-01#</value>
                  <value>#1971-01-01#</value>
                  <value>#1972-01-01#</value>
                  <value>#1973-01-01#</value>
                  <value>#1974-01-01#</value>
                  <value>#1975-01-01#</value>
                  <value>#1976-01-01#</value>
                  <value>#1977-01-01#</value>
                  <value>#1978-01-01#</value>
                  <value>#1979-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1980s&quot;'>
                  <value>#1980-01-01#</value>
                  <value>#1981-01-01#</value>
                  <value>#1982-01-01#</value>
                  <value>#1983-01-01#</value>
                  <value>#1984-01-01#</value>
                  <value>#1985-01-01#</value>
                  <value>#1986-01-01#</value>
                  <value>#1987-01-01#</value>
                  <value>#1988-01-01#</value>
                  <value>#1989-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1990s&quot;'>
                  <value>#1990-01-01#</value>
                  <value>#1991-01-01#</value>
                  <value>#1992-01-01#</value>
                  <value>#1993-01-01#</value>
                  <value>#1994-01-01#</value>
                  <value>#1995-01-01#</value>
                  <value>#1996-01-01#</value>
                  <value>#1997-01-01#</value>
                  <value>#1998-01-01#</value>
                  <value>#1999-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2000s&quot;'>
                  <value>#2000-01-01#</value>
                  <value>#2001-01-01#</value>
                  <value>#2002-01-01#</value>
                  <value>#2003-01-01#</value>
                  <value>#2004-01-01#</value>
                  <value>#2005-01-01#</value>
                  <value>#2006-01-01#</value>
                  <value>#2007-01-01#</value>
                  <value>#2008-01-01#</value>
                  <value>#2009-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2010s&quot;'>
                  <value>#2010-01-01#</value>
                  <value>#2011-01-01#</value>
                  <value>#2012-01-01#</value>
                  <value>#2013-01-01#</value>
                  <value>#2014-01-01#</value>
                  <value>#2015-01-01#</value>
                  <value>#2016-01-01#</value>
                  <value>#2017-01-01#</value>
                  <value>#2018-01-01#</value>
                  <value>#2019-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2020s&quot;'>
                  <value>#2020-01-01#</value>
                  <value>#2021-01-01#</value>
                  <value>#2022-01-01#</value>
                  <value>#2023-01-01#</value>
                  <value>#2024-01-01#</value>
                </bin>
              </calculation>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column caption='avg temp recent years' datatype='string' default-format='n#,##0.0;-#,##0.0' name='[avg preci recent years (copy)_5798103077755449348]' role='measure' type='nominal'>
              <calculation class='tableau' formula='STR(&#10;  ROUND(&#10;    AVG(&#10;      IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024&#10;      THEN [Temperature] &#10;      END&#10;    ), &#10;  1)&#10;) + &quot; °C&quot;' />
            </column>
            <column-instance column='[Season Selector_page2 (copy)_6593903205941587974]' derivation='None' name='[none:Season Selector_page2 (copy)_6593903205941587974:nk]' pivot='key' type='nominal' />
            <column-instance column='[avg preci recent years (copy)_5798103077755449348]' derivation='User' name='[usr:avg preci recent years (copy)_5798103077755449348:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (Region,State,Decades)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FCCD4231104443419DEE96B19EDDB30C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (group)]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Year (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2_A5C13B27447E4EDA86A72D5AD307C8D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector_page2 (copy)_6593903205941587974:nk]'>
            <groupfilter function='member' level='[none:Season Selector_page2 (copy)_6593903205941587974:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector_page2 (copy)_6593903205941587974:nk]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (Region,State,Decades)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='126' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-family' value='Tableau Regular' />
            <format attr='font-style' value='italic' />
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[usr:avg preci recent years (copy)_5798103077755449348:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CB437495-E4C9-431A-BCBC-327E7FA58B9D}' />
    </worksheet>
    <worksheet name='change climate value '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Bold'>Delta Compared to 1991-2020:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Region Parameter_page1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
              <calculation class='tableau' formula='&quot;West&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='Germany' />
              </aliases>
            </column>
            <column alias='Winter' caption='Season Parameter_page1' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;winter&quot;'>
              <calculation class='tableau' formula='&quot;winter&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
            <column caption='Select Climate Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Precipitation&quot;'>
              <calculation class='tableau' formula='&quot;Precipitation&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='Region Selector' datatype='boolean' name='[Calculation_5117778058666921985]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#10;WHEN &quot;East&quot; THEN [State (group)] = &quot;East&quot;&#10;WHEN &quot;West&quot; THEN [State (group)] = &quot;West&quot;&#10;WHEN &quot;South&quot; THEN [State (group)] = &quot;South&quot;&#10;WHEN &quot;North&quot; THEN [State (group)] = &quot;North&quot;&#10;WHEN &quot;All&quot; THEN TRUE&#10;END' />
            </column>
            <column caption='Season Selector' datatype='boolean' name='[Calculation_5117778058668744708]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Parameter 3])&#10;END' />
            </column>
            <column caption='delta climate parameter' datatype='string' name='[Calculation_5731745351977701378]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 4] = &quot;Temperature&quot; THEN&#10;    // Delta berechnen&#10;    STR(&#10;        IF &#10;            AVG(IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] END)&#10;            - &#10;            AVG(IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] END) &gt; 0&#10;        THEN &quot;+&quot;&#10;        ELSE &quot;&quot;&#10;        END&#10;        +&#10;        STR(ROUND(&#10;            AVG(IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] END)&#10;            -&#10;            AVG(IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] END),&#10;        1))&#10;        + &quot; °C&quot;&#10;)&#10;ELSE&#10;    STR(&#10;        IF &#10;            AVG(IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Precipitation] END)&#10;            - &#10;            AVG(IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Precipitation] END) &gt; 0&#10;        THEN &quot;+&quot;&#10;        ELSE &quot;&quot;&#10;        END&#10;        +&#10;        STR(ROUND(&#10;            AVG(IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Precipitation] END)&#10;            -&#10;            AVG(IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Precipitation] END),&#10;        1))&#10;        + &quot; mm&quot;&#10;)&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0&quot;mm&quot;;-#,##0&quot;mm&quot;' name='[Precipitation]' role='measure' type='quantitative' />
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Berlin&quot;</value>
                  <value>&quot;Brandenburg&quot;</value>
                  <value>&quot;Sachsen&quot;</value>
                  <value>&quot;Sachsen-Anhalt&quot;</value>
                  <value>&quot;Thüringen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Bremen&quot;</value>
                  <value>&quot;Hamburg&quot;</value>
                  <value>&quot;Mecklenburg-Vorpommern&quot;</value>
                  <value>&quot;Niedersachsen&quot;</value>
                  <value>&quot;Schleswig-Holstein&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Baden-Württemberg&quot;</value>
                  <value>&quot;Bayern&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Hessen&quot;</value>
                  <value>&quot;Nordrhein-Westfalen&quot;</value>
                  <value>&quot;Rheinland-Pfalz&quot;</value>
                  <value>&quot;Saarland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c#,##0.0&quot;°C&quot;;-#,##0.0&quot;°C&quot;' name='[Temperature]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_5117778058666921985]' derivation='None' name='[none:Calculation_5117778058666921985:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5117778058668744708]' derivation='None' name='[none:Calculation_5117778058668744708:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5731745351977701378]' derivation='User' name='[usr:Calculation_5731745351977701378:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666921985:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058666921985:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058668744708:nk]'>
            <groupfilter function='member' level='[none:Calculation_5117778058668744708:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058668744708:nk]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_5117778058666921985:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='126' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-family' value='Tableau Regular' />
            <format attr='font-style' value='italic' />
            <format attr='font-size' value='15' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[usr:Calculation_5731745351977701378:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C679580C-FFCB-4E7B-A3DB-7AAA05457CAA}' />
    </worksheet>
    <worksheet name='change precipitation'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#5393ce' fontname='Tableau Regular' fontsize='16'>Delta Compared to 1991-2020:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Summer' caption='Season Parameter_page2' datatype='string' name='[Season Parameter_page1 (copy)_6593903205935427585]' param-domain-type='list' role='measure' type='nominal' value='&quot;summer&quot;'>
              <calculation class='tableau' formula='&quot;summer&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column datatype='real' default-format='n#,##0&quot;mm&quot;;-#,##0&quot;mm&quot;' name='[Precipitation]' role='measure' type='quantitative' />
            <column caption='Season Selector_page2' datatype='boolean' name='[Season Selector (copy)_6593903205940457477]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Season Parameter_page1 (copy)_6593903205935427585] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Season Parameter_page1 (copy)_6593903205935427585])&#10;END' />
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column caption='delta precipitation' datatype='string' name='[delta climate parameter (copy)_5798103077753110530]' role='measure' type='nominal'>
              <calculation class='tableau' formula='STR(&#10;    IF &#10;        AVG(&#10;            IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 &#10;            THEN [Precipitation] &#10;            END&#10;        )&#10;        -&#10;        AVG(&#10;            IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020&#10;            THEN [Precipitation] &#10;            END&#10;        ) &gt; 0&#10;    THEN &quot;+&quot;&#10;    ELSE &quot;&quot;&#10;    END&#10;    +&#10;    STR(&#10;        ROUND(&#10;            AVG(&#10;                IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024&#10;                THEN [Precipitation] &#10;                END&#10;            )&#10;            -&#10;            AVG(&#10;                IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020&#10;                THEN [Precipitation] &#10;                END&#10;            ),&#10;        1)&#10;    )&#10;    + &quot; mm&quot;&#10;)' />
            </column>
            <column-instance column='[Season Selector (copy)_6593903205940457477]' derivation='None' name='[none:Season Selector (copy)_6593903205940457477:nk]' pivot='key' type='nominal' />
            <column-instance column='[delta climate parameter (copy)_5798103077753110530]' derivation='User' name='[usr:delta climate parameter (copy)_5798103077753110530:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]'>
            <groupfilter function='member' level='[State]' member='&quot;Hessen&quot;' user:ui-action-filter='[Action2_A5C13B27447E4EDA86A72D5AD307C8D2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector (copy)_6593903205940457477:nk]'>
            <groupfilter function='member' level='[none:Season Selector (copy)_6593903205940457477:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector (copy)_6593903205940457477:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='126' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-family' value='Tableau Regular' />
            <format attr='font-style' value='italic' />
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[usr:delta climate parameter (copy)_5798103077753110530:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3CFE9DD3-8BF9-46D6-B4B8-C6366E9EE23B}' />
    </worksheet>
    <worksheet name='change temp'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#d84e47' fontname='Tableau Regular' fontsize='16'>Delta Compared to 1991-2020:</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='df_merged_final' name='federated.0doh8r11iozygs1bkboxa1cfier8' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='all Seasons' caption='Season Parameter_page3' datatype='string' name='[Season Parameter_page2 (copy)_6593903205935837187]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;All&quot;' value='all Seasons' />
                <alias key='&quot;autumn&quot;' value='Autumn' />
                <alias key='&quot;spring&quot;' value='Spring' />
                <alias key='&quot;summer&quot;' value='Summer' />
                <alias key='&quot;winter&quot;' value='Winter' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0doh8r11iozygs1bkboxa1cfier8'>
            <column caption='Season Selector_page3' datatype='boolean' name='[Season Selector_page2 (copy)_6593903205941587974]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Season Parameter_page2 (copy)_6593903205935837187] = &quot;All&quot; THEN TRUE&#10;ELSE [Season] = LOWER([Parameters].[Season Parameter_page2 (copy)_6593903205935837187])&#10;END' />
            </column>
            <column datatype='string' name='[Season]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Berlin&quot;</value>
                  <value>&quot;Brandenburg&quot;</value>
                  <value>&quot;Sachsen&quot;</value>
                  <value>&quot;Sachsen-Anhalt&quot;</value>
                  <value>&quot;Thüringen&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;North&quot;'>
                  <value>&quot;Bremen&quot;</value>
                  <value>&quot;Hamburg&quot;</value>
                  <value>&quot;Mecklenburg-Vorpommern&quot;</value>
                  <value>&quot;Niedersachsen&quot;</value>
                  <value>&quot;Schleswig-Holstein&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Baden-Württemberg&quot;</value>
                  <value>&quot;Bayern&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Hessen&quot;</value>
                  <value>&quot;Nordrhein-Westfalen&quot;</value>
                  <value>&quot;Rheinland-Pfalz&quot;</value>
                  <value>&quot;Saarland&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' default-format='c#,##0.0&quot;°C&quot;;-#,##0.0&quot;°C&quot;' name='[Temperature]' role='measure' type='quantitative' />
            <column caption='Decades' datatype='string' name='[Year (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Year]' new-bin='true'>
                <bin default-name='false' value='&quot;1880s&quot;'>
                  <value>#1881-01-01#</value>
                  <value>#1882-01-01#</value>
                  <value>#1883-01-01#</value>
                  <value>#1884-01-01#</value>
                  <value>#1885-01-01#</value>
                  <value>#1886-01-01#</value>
                  <value>#1887-01-01#</value>
                  <value>#1888-01-01#</value>
                  <value>#1889-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1890s&quot;'>
                  <value>#1890-01-01#</value>
                  <value>#1891-01-01#</value>
                  <value>#1892-01-01#</value>
                  <value>#1893-01-01#</value>
                  <value>#1894-01-01#</value>
                  <value>#1895-01-01#</value>
                  <value>#1896-01-01#</value>
                  <value>#1897-01-01#</value>
                  <value>#1898-01-01#</value>
                  <value>#1899-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1900s&quot;'>
                  <value>#1900-01-01#</value>
                  <value>#1901-01-01#</value>
                  <value>#1902-01-01#</value>
                  <value>#1903-01-01#</value>
                  <value>#1904-01-01#</value>
                  <value>#1905-01-01#</value>
                  <value>#1906-01-01#</value>
                  <value>#1907-01-01#</value>
                  <value>#1908-01-01#</value>
                  <value>#1909-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1910s&quot;'>
                  <value>#1910-01-01#</value>
                  <value>#1911-01-01#</value>
                  <value>#1912-01-01#</value>
                  <value>#1913-01-01#</value>
                  <value>#1914-01-01#</value>
                  <value>#1915-01-01#</value>
                  <value>#1916-01-01#</value>
                  <value>#1917-01-01#</value>
                  <value>#1918-01-01#</value>
                  <value>#1919-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1920s&quot;'>
                  <value>#1920-01-01#</value>
                  <value>#1921-01-01#</value>
                  <value>#1922-01-01#</value>
                  <value>#1923-01-01#</value>
                  <value>#1924-01-01#</value>
                  <value>#1925-01-01#</value>
                  <value>#1926-01-01#</value>
                  <value>#1927-01-01#</value>
                  <value>#1928-01-01#</value>
                  <value>#1929-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1930s&quot;'>
                  <value>#1930-01-01#</value>
                  <value>#1931-01-01#</value>
                  <value>#1932-01-01#</value>
                  <value>#1933-01-01#</value>
                  <value>#1934-01-01#</value>
                  <value>#1935-01-01#</value>
                  <value>#1936-01-01#</value>
                  <value>#1937-01-01#</value>
                  <value>#1938-01-01#</value>
                  <value>#1939-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1940s&quot;'>
                  <value>#1940-01-01#</value>
                  <value>#1941-01-01#</value>
                  <value>#1942-01-01#</value>
                  <value>#1943-01-01#</value>
                  <value>#1944-01-01#</value>
                  <value>#1945-01-01#</value>
                  <value>#1946-01-01#</value>
                  <value>#1947-01-01#</value>
                  <value>#1948-01-01#</value>
                  <value>#1949-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1950s&quot;'>
                  <value>#1950-01-01#</value>
                  <value>#1951-01-01#</value>
                  <value>#1952-01-01#</value>
                  <value>#1953-01-01#</value>
                  <value>#1954-01-01#</value>
                  <value>#1955-01-01#</value>
                  <value>#1956-01-01#</value>
                  <value>#1957-01-01#</value>
                  <value>#1958-01-01#</value>
                  <value>#1959-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1960s&quot;'>
                  <value>#1960-01-01#</value>
                  <value>#1961-01-01#</value>
                  <value>#1962-01-01#</value>
                  <value>#1963-01-01#</value>
                  <value>#1964-01-01#</value>
                  <value>#1965-01-01#</value>
                  <value>#1966-01-01#</value>
                  <value>#1967-01-01#</value>
                  <value>#1968-01-01#</value>
                  <value>#1969-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1970s&quot;'>
                  <value>#1970-01-01#</value>
                  <value>#1971-01-01#</value>
                  <value>#1972-01-01#</value>
                  <value>#1973-01-01#</value>
                  <value>#1974-01-01#</value>
                  <value>#1975-01-01#</value>
                  <value>#1976-01-01#</value>
                  <value>#1977-01-01#</value>
                  <value>#1978-01-01#</value>
                  <value>#1979-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1980s&quot;'>
                  <value>#1980-01-01#</value>
                  <value>#1981-01-01#</value>
                  <value>#1982-01-01#</value>
                  <value>#1983-01-01#</value>
                  <value>#1984-01-01#</value>
                  <value>#1985-01-01#</value>
                  <value>#1986-01-01#</value>
                  <value>#1987-01-01#</value>
                  <value>#1988-01-01#</value>
                  <value>#1989-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;1990s&quot;'>
                  <value>#1990-01-01#</value>
                  <value>#1991-01-01#</value>
                  <value>#1992-01-01#</value>
                  <value>#1993-01-01#</value>
                  <value>#1994-01-01#</value>
                  <value>#1995-01-01#</value>
                  <value>#1996-01-01#</value>
                  <value>#1997-01-01#</value>
                  <value>#1998-01-01#</value>
                  <value>#1999-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2000s&quot;'>
                  <value>#2000-01-01#</value>
                  <value>#2001-01-01#</value>
                  <value>#2002-01-01#</value>
                  <value>#2003-01-01#</value>
                  <value>#2004-01-01#</value>
                  <value>#2005-01-01#</value>
                  <value>#2006-01-01#</value>
                  <value>#2007-01-01#</value>
                  <value>#2008-01-01#</value>
                  <value>#2009-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2010s&quot;'>
                  <value>#2010-01-01#</value>
                  <value>#2011-01-01#</value>
                  <value>#2012-01-01#</value>
                  <value>#2013-01-01#</value>
                  <value>#2014-01-01#</value>
                  <value>#2015-01-01#</value>
                  <value>#2016-01-01#</value>
                  <value>#2017-01-01#</value>
                  <value>#2018-01-01#</value>
                  <value>#2019-01-01#</value>
                </bin>
                <bin default-name='false' value='&quot;2020s&quot;'>
                  <value>#2020-01-01#</value>
                  <value>#2021-01-01#</value>
                  <value>#2022-01-01#</value>
                  <value>#2023-01-01#</value>
                  <value>#2024-01-01#</value>
                </bin>
              </calculation>
            </column>
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column caption='delta temperature' datatype='string' name='[delta precipitation (copy)_5798103077755850757]' role='measure' type='nominal'>
              <calculation class='tableau' formula='STR(&#10;  IF &#10;    AVG(&#10;      IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] &#10;      END&#10;    )&#10;    -&#10;    AVG(&#10;      IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] &#10;      END&#10;    ) &gt; 0&#10;  THEN &quot;+&quot;&#10;  ELSE &quot;&quot;&#10;  END&#10;  +&#10;  STR(&#10;    ROUND(&#10;      AVG(&#10;        IF YEAR([Year]) &gt;= 2021 AND YEAR([Year]) &lt;= 2024 THEN [Temperature] &#10;        END&#10;      )&#10;      -&#10;      AVG(&#10;        IF YEAR([Year]) &gt;= 1991 AND YEAR([Year]) &lt;= 2020 THEN [Temperature] &#10;        END&#10;      ),&#10;    1)&#10;  )&#10;  + &quot; °C&quot;&#10;)' />
            </column>
            <column-instance column='[Season Selector_page2 (copy)_6593903205941587974]' derivation='None' name='[none:Season Selector_page2 (copy)_6593903205941587974:nk]' pivot='key' type='nominal' />
            <column-instance column='[delta precipitation (copy)_5798103077755850757]' derivation='User' name='[usr:delta precipitation (copy)_5798103077755850757:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (Region,State,Decades)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1_FCCD4231104443419DEE96B19EDDB30C]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (group)]' />
              <groupfilter function='level-members' level='[State]' />
              <groupfilter function='level-members' level='[Year (group)]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]'>
            <groupfilter function='level-members' level='[State]' user:ui-action-filter='[Action2_A5C13B27447E4EDA86A72D5AD307C8D2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector_page2 (copy)_6593903205941587974:nk]'>
            <groupfilter function='member' level='[none:Season Selector_page2 (copy)_6593903205941587974:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Season Selector_page2 (copy)_6593903205941587974:nk]</column>
            <column>[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (Region,State,Decades)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='126' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#081b26' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#e6e6e6' />
            <format attr='font-family' value='Tableau Regular' />
            <format attr='font-style' value='italic' />
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0doh8r11iozygs1bkboxa1cfier8].[usr:delta precipitation (copy)_5798103077755850757:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BD3A14C3-6D33-4C7E-9F21-0670A6A02C75}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Page Intro'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98210' id='39' param='vert' type-v2='layout-flow' w='99048' x='476' y='895'>
            <zone fixed-size='152' h='17897' id='7' is-fixed='true' type-v2='title' w='99048' x='476' y='895'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='8389' id='62' type-v2='text' w='99048' x='476' y='18792'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Long-Term Climate Trends in Germany (1880-2024)</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#081b26' />
          </zone-style>
        </zone>
        <zone h='27629' id='77' is-centered='0' is-scaled='1' param='/Users/feepieper/Downloads/Intergovernmental_Panel_on_Climate_Change_logo.svg.png' type-v2='bitmap' w='29524' x='38631' y='46644' />
        <zone forceUpdate='true' h='8949' id='78' type-v2='text' w='49643' x='22976' y='28635'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#f7cf46' fontsize='24' italic='true'>Insights on Temperature and Precipitation Change </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6935' id='87' type-v2='text' w='16012' x='5655' y='81544'>
          <formatted-text>
            <run fontcolor='#f7cf46' fontsize='20'>by Fee Pieper</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text />
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='134' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98210' id='133' param='vert' type-v2='layout-flow' w='99048' x='476' y='895'>
                <zone fixed-size='152' h='17897' id='7' type-v2='title' w='99048' x='476' y='895'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8389' id='62' type-v2='text' w='99048' x='476' y='18792'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Long-Term Climate Trends in Germany (1880-2024)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8949' id='78' type-v2='text' w='49643' x='22976' y='28635'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#f7cf46' fontsize='24' italic='true'>Insights on Temperature and Precipitation Change </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='221' h='27629' id='77' is-centered='0' is-fixed='true' is-scaled='1' param='/Users/feepieper/Downloads/Intergovernmental_Panel_on_Climate_Change_logo.svg.png' type-v2='bitmap' w='29524' x='38631' y='46644'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6935' id='87' type-v2='text' w='16012' x='5655' y='81544'>
                  <formatted-text>
                    <run fontcolor='#f7cf46' fontsize='20'>by Fee Pieper</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#081b26' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{6EEA8D7D-E781-4F75-996E-96C72761C087}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Page Outro'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98210' id='39' param='vert' type-v2='layout-flow' w='99048' x='476' y='895'>
            <zone fixed-size='152' h='17897' id='7' is-fixed='true' type-v2='title' w='99048' x='476' y='895'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone forceUpdate='true' h='8389' id='62' type-v2='text' w='99048' x='476' y='18792'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Thank you for exploring this climate analysis! </run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#081b26' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='8949' id='78' type-v2='text' w='63393' x='24702' y='30984'>
          <formatted-text>
            <run bold='true' fontcolor='#5393ce' fontsize='24'>Scan the QR code to view the full version on Tableau Public.</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='6935' id='87' type-v2='text' w='40655' x='5119' y='89597'>
          <formatted-text>
            <run fontcolor='#f7cf46' fontsize='15'>Created by Fee Pieper with Tableau Public</run>
          </formatted-text>
        </zone>
        <zone h='33333' id='116' is-centered='0' is-scaled='1' param='/Users/feepieper/Library/CloudStorage/OneDrive-Persönlich/Bilder/Fee Pieper (1) (1).jpg' type-v2='bitmap' w='15417' x='20119' y='41275' />
        <zone h='8277' id='117' name='Sheet 12' w='44048' x='38571' y='67450' />
        <zone h='21588' id='130' is-centered='0' is-scaled='1' param='/Users/feepieper/Downloads/frame.png' type-v2='bitmap' w='22738' x='47440' y='41834' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text />
            </title>
          </layout-options>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='134' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98210' id='133' param='vert' type-v2='layout-flow' w='99048' x='476' y='895'>
                <zone fixed-size='152' h='17897' id='7' type-v2='title' w='99048' x='476' y='895'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8389' id='62' type-v2='text' w='99048' x='476' y='18792'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Thank you for exploring this climate analysis! </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='8949' id='78' type-v2='text' w='63393' x='24702' y='30984'>
                  <formatted-text>
                    <run bold='true' fontcolor='#5393ce' fontsize='24'>Scan the QR code to view the full version on Tableau Public.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='33333' id='116' is-centered='0' is-fixed='true' is-scaled='1' param='/Users/feepieper/Library/CloudStorage/OneDrive-Persönlich/Bilder/Fee Pieper (1) (1).jpg' type-v2='bitmap' w='15417' x='20119' y='41275'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='172' h='21588' id='130' is-centered='0' is-fixed='true' is-scaled='1' param='/Users/feepieper/Downloads/frame.png' type-v2='bitmap' w='22738' x='47440' y='41834'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='66' h='8277' id='117' is-fixed='true' name='Sheet 12' w='44048' x='38571' y='67450'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='6935' id='87' type-v2='text' w='40655' x='5119' y='89597'>
                  <formatted-text>
                    <run fontcolor='#f7cf46' fontsize='15'>Created by Fee Pieper with Tableau Public</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#081b26' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7E98235A-11A9-4D72-AC0A-FB87E233AADC}' />
    </dashboard>
    <dashboard name='Story' type='storyboard'>
      <style />
      <size maxheight='1064' maxwidth='1616' minheight='1064' minwidth='1616' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98496' id='16' param='vert' removable='false' type-v2='layout-flow' w='99010' x='495' y='752'>
            <zone h='3102' id='18' type-v2='title' w='99010' x='495' y='752' />
            <zone h='9492' id='19' is-fixed='true' paired-zone-id='20' removable='false' type-v2='flipboard-nav' w='99010' x='495' y='3854' />
            <zone h='85902' id='20' paired-zone-id='19' removable='false' type-v2='flipboard' w='99010' x='495' y='13346'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Intro' captured-sheet='Page Intro' id='1' />
                  <story-point caption='Climate Overview Germany' captured-sheet='page 1' id='2'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column name='[Parameter 4]' value='&quot;Temperature&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Regional Patterns Precipitation' captured-sheet='page 2' id='3'>
                    <capturedDeltas>
                      <worksheet name='Choropleth Precipitation'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.0doh8r11iozygs1bkboxa1cfier8].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.0doh8r11iozygs1bkboxa1cfier8].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]</field>
                                  <field>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:State:nk]</field>
                                  <field>[federated.0doh8r11iozygs1bkboxa1cfier8].[Geometry (generated)]</field>
                                  <field>[federated.0doh8r11iozygs1bkboxa1cfier8].[Latitude (generated)]</field>
                                  <field>[federated.0doh8r11iozygs1bkboxa1cfier8].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>134.67499999999998</value>
                                <value>&quot;Brandenburg&quot;</value>
                                <value>&quot;POLYGON((11.2662 53.1218,11.3814 53.1104,11.3953 53.1402,11.4602 53.1403,11.4848 53.1287,11.5345 53.1252,11.5562 53.139,11.5652 53.1645,11.5583 53.2018,11.6291 53.2423,11.7005 53.2437,11.7286 53.217,11.7696 53.2276,11.829 53.2286,11.8145 53.2542,11.8614 53.2486,11.8966 53.2789,11.9543 53.2738,11.9828 53.299,12.0235 53.3043,12.0141 53.3345,12.057 53.3493,12.1346 53.3485,12.1519 53.3615,12.1686 53.3391,12.191 53.3542,12.2298 53.358,12.2457 53.3328,12.2717 53.3241,12.3113 53.3272,12.3962 53.3002,12.4001 53.2792,12.427 53.2752,12.4454 53.2496,12.5296 53.2647,12.6058 53.2442,12.627 53.2549,12.6739 53.2491,12.6708 53.2296,12.7215 53.2219,12.7518 53.2094,12.7641 53.1889,12.8484 53.2008,12.8789 53.1794,12.9231 53.1958,12.9671 53.1678,13.0051 53.1697,13.0431 53.1968,13.1064 53.2152,13.1045 53.2362,13.1329 53.2371,13.152 53.251,13.1802 53.2507,13.2033 53.2214,13.2295 53.2166,13.251 53.2475,13.2971 53.2807,13.3375 53.2733,13.3607 53.2779,13.3895 53.2424,13.4053 53.2475,13.4384 53.3003,13.4608 53.2888,13.4852 53.292,13.5102 53.3179,13.526 53.3675,13.5566 53.3763,13.5503 53.399,13.574 53.4081,13.6263 53.4104,13.634 53.4398,13.7165 53.4828,13.7894 53.4751,13.8122 53.484,13.7773 53.5132,13.7787 53.542,13.7988 53.5463,13.82 53.5179,13.8813 53.5074,13.8754 53.4737,13.9151 53.4567,13.9179 53.422,13.9457 53.4311,14.0006 53.435,14.0454 53.4296,14.0515 53.4127,14.0837 53.4148,14.1367 53.4408,14.1788 53.4226,14.2248 53.4343,14.2415 53.387,14.2204 53.3553,14.1047 53.2772,14.1248 53.2603,14.1596 53.2679,14.2114 53.2549,14.2661 53.2595,14.2616 53.2764,14.3013 53.2859,14.3165 53.3125,14.3487 53.31,14.4121 53.3297,14.4068 53.3087,14.4212 53.2761,14.4496 53.2595,14.3773 53.2018,14.3663 53.172,14.3873 53.1424,14.3661 53.0794,14.338 53.0466,14.2356 52.9932,14.2069 52.9875,14.1437 52.9614,14.1388 52.9518,14.1588 52.8773,14.123 52.844,14.1447 52.8236,14.2105 52.8188,14.2804 52.7737,14.3525 52.7507,14.4711 52.6578,14.5651 52.6245,14.5962 52.6107,14.6174 52.5838,14.6185 52.5569,14.6051 52.5355,14.616 52.5081,14.6354 52.4944,14.6088 52.4639,14.5778 52.441,14.5552 52.4374,14.5344 52.395,14.5509 52.3765,14.5521 52.3537,14.5849 52.3065,14.5926 52.2747,14.6927 52.2557,14.7149 52.2368,14.6881 52.1893,14.7031 52.1643,14.6791 52.142,14.6816 52.1167,14.7004 52.0981,14.7413 52.0852,14.7552 52.07,14.7484 52.0323,14.714 52.0037,14.7073 51.9657,14.7213 51.9512,14.6945 51.9026,14.6631 51.8905,14.6526 51.8744,14.6116 51.8574,14.5906 51.8387,14.6078 51.8036,14.634 51.8011,14.6538 51.7829,14.6567 51.7405,14.691 51.7082,14.736 51.6888,14.7577 51.6602,14.761 51.6025,14.7299 51.5818,14.7085 51.597,14.6774 51.5519,14.6099 51.5502,14.5987 51.5714,14.5695 51.5811,14.5481 51.5635,14.5159 51.5542,14.4505 51.556,14.4097 51.5371,14.3868 51.5417,14.3556 51.5218,14.3233 51.5187,14.2769 51.531,14.2285 51.5329,14.1397 51.5437,14.0738 51.4922,14.0723 51.4724,14.0366 51.4345,14.0452 51.4188,13.9974 51.3855,13.9553 51.3973,13.8842 51.3749,13.8361 51.3831,13.8207 51.3698,13.7759 51.3606,13.6829 51.3677,13.5941 51.3695,13.5902 51.3844,13.5248 51.384,13.5208 51.4037,13.4634 51.4121,13.3881 51.448,13.3758 51.4249,13.3366 51.4305,13.2509 51.3938,13.2196 51.3945,13.1919 51.4373,13.2016 51.4598,13.1821 51.4731,13.2071 51.5048,13.2083 51.5244,13.1857 51.5582,13.1417 51.5714,13.1619 51.5921,13.119 51.6185,13.0944 51.6056,13.051 51.6475,13.1544 51.6865,13.1662 51.7182,13.1535 51.815,13.1232 51.8578,13.1325 51.8822,13.0393 51.8708,13.045 51.9008,12.99 51.9044,12.9602 51.9351,12.9172 51.9394,12.8531 51.9351,12.8443 51.9675,12.7962 51.9622,12.7564 51.9866,12.7298 51.989,12.6682 52.0132,12.6447 51.994,12.603 51.9815,12.5394 51.985,12.5352 52.0012,12.5045 52.0072,12.4607 52.0344,12.4345 52.0169,12.3897 52.0434,12.3573 52.0479,12.3316 52.0669,12.3149 52.0931,12.2702 52.1131,12.2158 52.1712,12.261 52.2168,12.2723 52.2354,12.2455 52.2501,12.2629 52.2953,12.3083 52.3448,12.2839 52.3646,12.3024 52.4051,12.2974 52.4236,12.3139 52.46,12.2998 52.4958,12.2772 52.4871,12.2588 52.5156,12.1846 52.4958,12.1455 52.5297,12.1736 52.582,12.1722 52.6258,12.2027 52.6185,12.2312 52.6299,12.2391 52.6656,12.2009 52.7284,12.2221 52.7402,12.2058 52.7607,12.2575 52.805,12.2322 52.8495,12.1996 52.8713,12.1601 52.8613,12.1314 52.8642,12.0756 52.8867,12.0229 52.8905,11.9782 52.8765,11.9494 52.8872,11.8995 52.893,11.8704 52.9091,11.8399 52.9093,11.8433 52.9375,11.8306 52.9578,11.7853 52.9609,11.7402 52.9895,11.6905 52.9792,11.6786 53.0073,11.6418 53.0055,11.6189 53.0414,11.5972 53.0359,11.5444 53.0528,11.5052 53.0488,11.4626 53.0751,11.4023 53.0724,11.339 53.0551,11.2693 53.1013,11.2662 53.1218),(13.7558 52.4415,13.716 52.4629,13.6432 52.4792,13.6114 52.4707,13.6358 52.5142,13.6344 52.5428,13.5864 52.5498,13.583 52.5685,13.5472 52.588,13.5082 52.5922,13.499 52.6052,13.5129 52.6454,13.4595 52.669,13.4244 52.6355,13.3979 52.6483,13.3764 52.6284,13.3367 52.6227,13.3131 52.6282,13.3004 52.6534,13.2643 52.6268,13.2205 52.6283,13.2014 52.6049,13.1645 52.5988,13.1305 52.556,13.1174 52.517,13.1688 52.5092,13.1177 52.4773,13.1093 52.4507,13.1231 52.4396,13.0908 52.4116,13.1248 52.3969,13.1973 52.4155,13.246 52.4212,13.2497 52.4052,13.2959 52.4145,13.3121 52.3991,13.343 52.4077,13.4208 52.3762,13.4188 52.41,13.468 52.42,13.4798 52.3959,13.516 52.4018,13.5355 52.389,13.5927 52.3938,13.6058 52.3736,13.6427 52.3775,13.6371 52.3448,13.6517 52.3395,13.6861 52.384,13.7158 52.3997,13.7558 52.4415))&quot;</value>
                                <value>52.4732</value>
                                <value>14.1407</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='avg precipitation recent years'>
                        <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]'>
                          <groupfilter function='member' level='[State]' member='&quot;Brandenburg&quot;' user:ui-action-filter='[Action2_A5C13B27447E4EDA86A72D5AD307C8D2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='change precipitation'>
                        <filter class='categorical' column='[federated.0doh8r11iozygs1bkboxa1cfier8].[Action (State)]'>
                          <groupfilter function='member' level='[State]' member='&quot;Brandenburg&quot;' user:ui-action-filter='[Action2_A5C13B27447E4EDA86A72D5AD307C8D2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <datasource name='Parameters'>
                        <column alias='Autumn' name='[Season Parameter_page1 (copy)_6593903205935427585]' value='&quot;autumn&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Regional Pattern Temperature' captured-sheet='page 3' id='4'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column alias='Spring' name='[Season Parameter_page2 (copy)_6593903205935837187]' value='&quot;spring&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Forecast Temperature' captured-sheet='page 4' id='5'>
                    <currentDeltas>
                      <datasource name='Parameters'>
                        <column name='[Region Parameter_page3 (copy)_6593903205941825544]' value='&quot;West&quot;' />
                      </datasource>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                  <story-point caption='Outro' captured-sheet='Page Outro' id='6'>
                    <currentDeltas>
                      <worksheet name='Sheet 12'>
                        <selection-collection />
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{2A2F3E34-5A6F-456E-B5E7-A77E55C6C0C7}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='page 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Climate Overview: Germany at a Glance</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#e6e6e6' />
          <_.fcp.IndividualControlFormatting.true...format attr='color' field='[Parameters].[Parameter 4]' value='#f7cf46' />
          <format attr='font-size' value='12' />
          <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[Parameters].[Parameter 4]' value='18' />
          <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[Parameters].[Parameter 4]' value='bold' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-weight' value='normal' />
          <_.fcp.IndividualControlFormatting.true...format attr='font-size' field='[Parameters].[Parameter 4]' value='14' />
          <_.fcp.IndividualControlFormatting.true...format attr='font-weight' field='[Parameters].[Parameter 4]' value='bold' />
          <_.fcp.IndividualControlFormatting.true...format attr='color' field='[Parameters].[Parameter 4]' value='#f7cf46' />
          <format attr='font-size' value='14' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Region Parameter_page1' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;West&quot;'>
          <calculation class='tableau' formula='&quot;West&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='Germany' />
          </aliases>
          <members>
            <member alias='Germany' value='&quot;All&quot;' />
            <member value='&quot;East&quot;' />
            <member value='&quot;West&quot;' />
            <member value='&quot;South&quot;' />
            <member value='&quot;North&quot;' />
          </members>
        </column>
        <column alias='Winter' caption='Season Parameter_page1' datatype='string' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;winter&quot;'>
          <calculation class='tableau' formula='&quot;winter&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='all Seasons' />
            <alias key='&quot;autumn&quot;' value='Autumn' />
            <alias key='&quot;spring&quot;' value='Spring' />
            <alias key='&quot;summer&quot;' value='Summer' />
            <alias key='&quot;winter&quot;' value='Winter' />
          </aliases>
          <members>
            <member alias='all Seasons' value='&quot;All&quot;' />
            <member alias='Spring' value='&quot;spring&quot;' />
            <member alias='Summer' value='&quot;summer&quot;' />
            <member alias='Autumn' value='&quot;autumn&quot;' />
            <member alias='Winter' value='&quot;winter&quot;' />
          </members>
        </column>
        <column caption='Select Climate Parameter' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;Precipitation&quot;'>
          <calculation class='tableau' formula='&quot;Precipitation&quot;' />
          <members>
            <member value='&quot;Temperature&quot;' />
            <member value='&quot;Precipitation&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98312' id='39' param='vert' type-v2='layout-flow' w='99064' x='468' y='844'>
            <zone fixed-size='152' h='16878' id='7' is-fixed='true' type-v2='title' w='99064' x='468' y='844'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#081b26' />
          </zone-style>
        </zone>
        <zone custom-title='true' h='18009' id='63' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11131' x='83393' y='57494'>
          <formatted-text>
            <run fontcolor='#aeaeae' fontsize='14'>Select Region</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='20134' id='64' mode='list' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='11786' x='83036' y='34676'>
          <formatted-text>
            <run fontcolor='#aeaeae'>Select Season</run>
          </formatted-text>
        </zone>
        <zone custom-title='true' h='10850' id='65' mode='list' param='[Parameters].[Parameter 4]' show-title='false' type-v2='paramctrl' w='12500' x='68393' y='17673' />
        <zone forceUpdate='true' h='5593' id='67' type-v2='text' w='39821' x='27857' y='16667'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>Switch </run>
            <run fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>between </run>
            <run bold='true' fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>temperature </run>
            <run fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>and </run>
            <run bold='true' fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>precipitation</run>
            <run fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>.</run>
          </formatted-text>
        </zone>
        <zone h='63647' id='72' name='Time Series (2)' w='61369' x='19167' y='30089' />
        <zone h='4251' id='73' name='Time Series (2)' pane-specification-id='2' param='[federated.0doh8r11iozygs1bkboxa1cfier8].[State (group)]' type-v2='color' w='8333' x='66845' y='32327' />
        <zone h='10179' id='92' name='change climate value ' w='10229' x='3494' y='51566' />
        <zone h='12752' id='111' name='avg climate value recent years' w='14485' x='3240' y='36018' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Climate Overview: Germany at a Glance</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='900' minheight='900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='137' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98312' id='136' param='vert' type-v2='layout-flow' w='99064' x='468' y='844'>
                <zone fixed-size='152' h='16878' id='7' type-v2='title' w='99064' x='468' y='844'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5593' id='67' type-v2='text' w='39821' x='27857' y='16667'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>Switch </run>
                    <run fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>between </run>
                    <run bold='true' fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>temperature </run>
                    <run fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>and </run>
                    <run bold='true' fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>precipitation</run>
                    <run fontalignment='1' fontcolor='#f7cf46' fontname='Tableau Light' fontsize='20' italic='true'>.</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='10850' id='65' mode='list' param='[Parameters].[Parameter 4]' show-title='false' type-v2='paramctrl' w='12500' x='68393' y='17673'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63647' id='72' is-fixed='true' name='Time Series (2)' w='61369' x='19167' y='30089'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4251' id='73' name='Time Series (2)' pane-specification-id='2' param='[federated.0doh8r11iozygs1bkboxa1cfier8].[State (group)]' type-v2='color' w='8333' x='66845' y='32327'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='20134' id='64' mode='list' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='11786' x='83036' y='34676'>
                  <formatted-text>
                    <run fontcolor='#aeaeae'>Select Season</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='102' h='12752' id='111' is-fixed='true' name='avg climate value recent years' w='14485' x='3240' y='36018'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='81' h='10179' id='92' is-fixed='true' name='change climate value ' w='10229' x='3494' y='51566'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='18009' id='63' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='11131' x='83393' y='57494'>
                  <formatted-text>
                    <run fontcolor='#aeaeae' fontsize='14'>Select Region</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#081b26' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1BEFD257-CF60-4B3F-AE4B-19EA1627D0F5}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='page 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Regional Patterns in Precipitation</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#e6e6e6' />
          <format attr='font-size' value='12' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-size' value='12' />
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Summer' caption='Season Parameter_page2' datatype='string' name='[Season Parameter_page1 (copy)_6593903205935427585]' param-domain-type='list' role='measure' type='nominal' value='&quot;summer&quot;'>
          <calculation class='tableau' formula='&quot;summer&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='all Seasons' />
            <alias key='&quot;autumn&quot;' value='Autumn' />
            <alias key='&quot;spring&quot;' value='Spring' />
            <alias key='&quot;summer&quot;' value='Summer' />
            <alias key='&quot;winter&quot;' value='Winter' />
          </aliases>
          <members>
            <member alias='all Seasons' value='&quot;All&quot;' />
            <member alias='Spring' value='&quot;spring&quot;' />
            <member alias='Summer' value='&quot;summer&quot;' />
            <member alias='Autumn' value='&quot;autumn&quot;' />
            <member alias='Winter' value='&quot;winter&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98312' id='39' param='vert' type-v2='layout-flow' w='99064' x='468' y='844'>
            <zone fixed-size='152' h='16878' id='7' is-fixed='true' type-v2='title' w='99064' x='468' y='844'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#081b26' />
          </zone-style>
        </zone>
        <zone h='12864' id='107' name='avg precipitation recent years' w='16010' x='4066' y='25951' />
        <zone h='10403' id='108' name='change precipitation' w='16201' x='4066' y='41723' />
        <zone h='75503' id='129' name='Choropleth Precipitation' w='57624' x='21156' y='20694' />
        <zone h='6488' id='130' name='Choropleth Precipitation' pane-specification-id='0' param='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]' type-v2='color' w='18742' x='21601' y='89374' />
        <zone custom-title='true' h='20917' id='131' mode='list' param='[Parameters].[Season Parameter_page1 (copy)_6593903205935427585]' type-v2='paramctrl' w='10165' x='81258' y='25839'>
          <formatted-text>
            <run fontsize='14'>Select Season</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Regional Patterns in Precipitation</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='151' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98312' id='150' param='vert' type-v2='layout-flow' w='99064' x='468' y='844'>
                <zone fixed-size='152' h='16878' id='7' type-v2='title' w='99064' x='468' y='844'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='75503' id='129' is-fixed='true' name='Choropleth Precipitation' w='57624' x='21156' y='20694'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6488' id='130' name='Choropleth Precipitation' pane-specification-id='0' param='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]' type-v2='color' w='18742' x='21601' y='89374'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='20917' id='131' mode='list' param='[Parameters].[Season Parameter_page1 (copy)_6593903205935427585]' type-v2='paramctrl' w='10165' x='81258' y='25839'>
                  <formatted-text>
                    <run fontsize='14'>Select Season</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='103' h='12864' id='107' is-fixed='true' name='avg precipitation recent years' w='16010' x='4066' y='25951'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='10403' id='108' is-fixed='true' name='change precipitation' w='16201' x='4066' y='41723'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#081b26' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A9B9F6CB-1E41-4C12-95F3-B5C88AA592B6}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='page 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Regional Patterns in Temperature</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#e6e6e6' />
          <format attr='font-size' value='12' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='all Seasons' caption='Season Parameter_page3' datatype='string' name='[Season Parameter_page2 (copy)_6593903205935837187]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='all Seasons' />
            <alias key='&quot;autumn&quot;' value='Autumn' />
            <alias key='&quot;spring&quot;' value='Spring' />
            <alias key='&quot;summer&quot;' value='Summer' />
            <alias key='&quot;winter&quot;' value='Winter' />
          </aliases>
          <members>
            <member alias='all Seasons' value='&quot;All&quot;' />
            <member alias='Spring' value='&quot;spring&quot;' />
            <member alias='Summer' value='&quot;summer&quot;' />
            <member alias='Autumn' value='&quot;autumn&quot;' />
            <member alias='Winter' value='&quot;winter&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98312' id='78' param='horz' type-v2='layout-flow' w='99064' x='468' y='844'>
            <zone h='98312' id='39' param='vert' type-v2='layout-flow' w='99064' x='468' y='844'>
              <zone fixed-size='152' h='16878' id='7' is-fixed='true' type-v2='title' w='99064' x='468' y='844'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#081b26' />
          </zone-style>
        </zone>
        <zone h='51342' id='131' name='Heatmap by Region' w='80813' x='9593' y='39038' />
        <zone custom-title='true' h='19016' id='133' mode='list' param='[Parameters].[Season Parameter_page2 (copy)_6593903205935837187]' type-v2='paramctrl' w='12579' x='81893' y='23490'>
          <formatted-text>
            <run fontsize='14'>Select Season</run>
          </formatted-text>
        </zone>
        <zone h='8501' id='134' name='avg temp recent years' w='47141' x='13024' y='23378' />
        <zone h='7830' id='135' name='change temp' w='27065' x='48094' y='23266' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Regional Patterns in Temperature</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='155' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98312' id='154' param='vert' type-v2='layout-flow' w='99064' x='468' y='844'>
                <zone fixed-size='152' h='16878' id='7' type-v2='title' w='99064' x='468' y='844'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='63' h='7830' id='135' is-fixed='true' name='change temp' w='27065' x='48094' y='23266'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='8501' id='134' is-fixed='true' name='avg temp recent years' w='47141' x='13024' y='23378'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='19016' id='133' mode='list' param='[Parameters].[Season Parameter_page2 (copy)_6593903205935837187]' type-v2='paramctrl' w='12579' x='81893' y='23490'>
                  <formatted-text>
                    <run fontsize='14'>Select Season</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51342' id='131' is-fixed='true' name='Heatmap by Region' w='80813' x='9593' y='39038'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#081b26' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D0B72FC0-8648-426A-8017-7C295F0B14FB}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='page 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Æ&#10;</run>
            <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Temperature Forecast &amp; Future Outlook</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#e6e6e6' />
          <format attr='font-size' value='12' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Region Parameter_page4' datatype='string' name='[Region Parameter_page3 (copy)_6593903205941825544]' param-domain-type='list' role='measure' type='nominal' value='&quot;North&quot;'>
          <calculation class='tableau' formula='&quot;North&quot;' />
          <aliases>
            <alias key='&quot;All&quot;' value='Germany' />
          </aliases>
          <members>
            <member alias='Germany' value='&quot;All&quot;' />
            <member value='&quot;East&quot;' />
            <member value='&quot;West&quot;' />
            <member value='&quot;South&quot;' />
            <member value='&quot;North&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98210' id='39' param='vert' type-v2='layout-flow' w='99048' x='476' y='895'>
            <zone fixed-size='152' h='17897' id='7' is-fixed='true' type-v2='title' w='99048' x='476' y='895'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='80313' id='58' param='vert' type-v2='layout-flow' w='99048' x='476' y='18792' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#081b26' />
          </zone-style>
        </zone>
        <zone h='72148' id='109' name='Forecast Temperature' w='73333' x='6488' y='22483' />
        <zone h='10626' id='110' name='Forecast Temperature' pane-specification-id='0' param='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Forecast Indicator:nk]' type-v2='color' w='11131' x='14226' y='30313' />
        <zone custom-title='true' h='19799' id='111' mode='list' param='[Parameters].[Region Parameter_page3 (copy)_6593903205941825544]' type-v2='paramctrl' w='9530' x='83291' y='27181'>
          <formatted-text>
            <run fontsize='15'>Select Region</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>Æ&#10;</run>
                <run fontalignment='1' fontcolor='#f7cf46' fontsize='36'>Temperature Forecast &amp; Future Outlook</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='131' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98210' id='130' param='vert' type-v2='layout-flow' w='99048' x='476' y='895'>
                <zone fixed-size='152' h='17897' id='7' type-v2='title' w='99048' x='476' y='895'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72148' id='109' is-fixed='true' name='Forecast Temperature' w='73333' x='6488' y='22483'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10626' id='110' name='Forecast Temperature' pane-specification-id='0' param='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Forecast Indicator:nk]' type-v2='color' w='11131' x='14226' y='30313'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='19799' id='111' mode='list' param='[Parameters].[Region Parameter_page3 (copy)_6593903205941825544]' type-v2='paramctrl' w='9530' x='83291' y='27181'>
                  <formatted-text>
                    <run fontsize='15'>Select Region</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#081b26' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7C93BA31-CC9E-4BF3-87D2-950E05C6E2D4}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Time Series (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card custom-title='true' mode='list' param='[Parameters].[Parameter 3]' type='parameter' />
            <card custom-title='true' mode='list' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3336F073-72B4-44FA-885B-499F160BD57C}' />
    </window>
    <window class='worksheet' name='Choropleth Precipitation'>
      <cards>
        <edge name='left'>
          <strip size='238'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='230'>
            <card pane-specification-id='0' param='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Precipitation:qk]' type='color' />
            <card mode='list' param='[Parameters].[Season Parameter_page1 (copy)_6593903205935427585]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{07F7CB90-5AF9-41E2-8EB5-CA1C69012B46}' />
    </window>
    <window class='worksheet' name='Heatmap by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='137'>
            <card pane-specification-id='0' param='[federated.0doh8r11iozygs1bkboxa1cfier8].[avg:Temperature:qk]' type='color' />
            <card mode='list' param='[Parameters].[Season Parameter_page2 (copy)_6593903205935837187]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4D8DF1B6-516C-43C7-A03E-A134BBBC3BB6}' />
    </window>
    <window class='worksheet' name='Forecast Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='300'>
            <card pane-specification-id='0' param='[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Forecast Indicator:nk]' type='color' />
            <card mode='list' param='[Parameters].[Region Parameter_page3 (copy)_6593903205941825544]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{79BCAF64-9088-457B-BCE3-1BFD55826F82}' />
    </window>
    <window class='dashboard' name='Page Intro'>
      <viewpoints />
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{1E166695-B49B-49EB-B337-B68340E5FA55}' />
    </window>
    <window class='dashboard' name='Page Outro'>
      <viewpoints>
        <viewpoint name='Sheet 12' />
      </viewpoints>
      <active id='130' />
      <device-preview visible='true' />
      <simple-id uuid='{7B775D55-38A6-4316-BCE3-2C37942F24BC}' />
    </window>
    <window class='dashboard' name='page 1'>
      <viewpoints>
        <viewpoint name='Time Series (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='avg climate value recent years'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='change climate value '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{7C1BB7D1-FF45-4091-814A-2A7F0800A978}' />
    </window>
    <window class='dashboard' name='page 2'>
      <viewpoints>
        <viewpoint name='Choropleth Precipitation'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='avg precipitation recent years'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='change precipitation'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{729704D3-928C-41BD-9463-C1D2EE8129FF}' />
    </window>
    <window class='dashboard' name='page 3'>
      <viewpoints>
        <viewpoint name='Heatmap by Region' />
        <viewpoint name='avg temp recent years'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='change temp'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true' />
      <simple-id uuid='{45D358DF-4443-48A8-A92F-BF09F956E32C}' />
    </window>
    <window class='dashboard' name='page 4'>
      <viewpoints>
        <viewpoint name='Forecast Temperature'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='111' />
      <device-preview visible='true' />
      <simple-id uuid='{F644CAE9-9121-4F83-93BE-482E23FF1E73}' />
    </window>
    <window class='worksheet' name='avg climate value recent years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{EAE9F699-BED7-4FF9-AE77-4F8315D7FB47}' />
    </window>
    <window class='worksheet' name='avg precipitation recent years'>
      <cards>
        <edge name='left'>
          <strip size='285'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Season Parameter_page1 (copy)_6593903205935427585]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3461DAEB-4FC0-49D1-86C5-3D4B76590345}' />
    </window>
    <window class='worksheet' name='avg temp recent years'>
      <cards>
        <edge name='left'>
          <strip size='231'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Season Parameter_page2 (copy)_6593903205935837187]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EE51D0F3-F8E9-473A-879C-14764665DAB8}' />
    </window>
    <window class='worksheet' name='avg climate value comparison period'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E4FA72FC-71BD-4795-A8E4-F484CDA83B3F}' />
    </window>
    <window class='worksheet' name='change climate value '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EAC28C1D-23F7-4841-9D5C-3CD592EFE8D3}' />
    </window>
    <window class='worksheet' name='change precipitation'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='list' param='[Parameters].[Season Parameter_page1 (copy)_6593903205935427585]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A2184B24-4FA0-4884-A10E-7EEC9AB250BE}' />
    </window>
    <window class='worksheet' name='change temp'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='255'>
            <card mode='list' param='[Parameters].[Season Parameter_page2 (copy)_6593903205935837187]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{DD7B8160-4BCE-4370-B3F6-610B734BD08F}' />
    </window>
    <window class='dashboard' maximized='true' name='Story'>
      <viewpoints />
      <active id='39' />
      <simple-id uuid='{9C4F19D3-A489-428D-8D16-281A5CD930B5}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0doh8r11iozygs1bkboxa1cfier8].[none:Calculation_6694319403922849792:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3523E946-C762-40E7-A287-7C406BF8FFDD}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Forecast Temperature' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='Heatmap by Region' width='384'>
      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
      TNA3OIx9dsaxSqWiqqyY9JRkDAYDbo+H7t5+uvsH8M3O4NVo1KxeVsvE1DR+f4DkxARscRb8
      gSADQ8P09A+K8fbCoiFLYNSKmsCLmkqlQpIkfD4/trg4TCYjTpcbRVGYnJpm8l0X4s88eB/F
      BXmYY0zodTpm7A5On7/A3sPHON90cW6fK2qXcO+dd1BSkIfJaMQfCNB0sY1f/PZl+geHZ7eT
      2bphDXlZmeTnZKFSq7jc08frew6w8829KESLzNy/bTPrVy3HZrWgKNGKXO2dXezae5DjZ84h
      yzJ1Syr5/CMPkp2Zjl4XXS/oXFMLO9/aR/2FJiIRhRijkT/9gy/Q1duPy+UmLzuTzLRU/IEA
      p89f4OVdezjX1PJx/BoE4ZZTq2TSrAYRAIuZPxCg5VIHlSVFPLbjHmJMRlo7OpmansHpcs/7
      Vp+Wkkx1eQluj5fWS5cxGg0U5ubw4N13Yo2zcKGljUgkQmZaKl//k6dISoinq7efS109GPQ6
      tDottrjYuQDQajQ8cNdWxicn6R8eISnBxoqaKlBg3+Fj+Hx+ivJy+JMvPcmMw0FTazsOh4uE
      eBupSUnk52Rxov48Vkss//NP/4j0lGQOHj/F0OgY5cUFbF63mhijkZ7+wejCaoRqtPAAACAA
      SURBVDodS8pLKcnPY2xiksGRUXoHB8lMS2XTmlU4XW4RAMKiIwJgEYtEInzvJ7/gL//8q6xZ
      vpT1q5bT1dvPoeOn2Hf4OM1t7fhmSz/2Dw7zP/7unxkYGsE3W6hk68a1/PEXnqC8qJA4i5mp
      aTufe2QHmWmpvLbnAD//9Qt0dPWgnq3Nq3rH84RgOMw/fe+HHDx+CrvDyZb1a/jSE4+RYLOS
      m5VFe2cnFSXFaDUaXtj5Ji++/hZDo2OoVSrirVb0eh0GvZ7lNdVUlhbzm1de59s/+Bmj4xNU
      lZXw5SceoyA3m1V1Nbz61r65di91dfMP3/kBDc0X8QcCPPHwDr7yxc9RUph/yz9/Qfi4iQBY
      5A4eP01339d56N5tbNu0nrysTEoK8rh/22ZefP0tvvX9n6IoCiNj44yMjZOZlkpGagpWq4W8
      rEw8Hg/WuDiKcnM4OX2BZTXV+P1+XnljD5e7o0vahsLhuaUNYkzRerqhYIiG5ta5fvxpu52J
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Page Outro' width='384'>
      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
    </thumbnail>
    <thumbnail height='96' name='Sheet 12' width='384'>
      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
      X6/81Hva9IYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Story' width='384'>
      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
      8a4nATByciHYkXmv95fMAQghhEdJAAghhEdJAAghhEdJAAghhEdJAAghhEdJAAghhEdJAAgh
      hEdJAAghhEdJAAghhEdJAAghhEdJAAghhEdJAAghhEdJAAghhEfJ3UCFEMKj5AxACCE8SgJA
      CCE8SgJACCE8SgJACCE8SgJACCE8SgJACCE8SgJACCE8SgJACCE8SgJACCE8SgJACCE8SgJA
      CCE8yjzcCzIrp70T7RBCCPEOkzMAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTwKAkAIYTw
      KAkAIYTwKAkAIYTwKPNYN0CIg114UiZ+n8b/vRI+1k05pPefmoXjwJOrju92vhOK8nSuOCub
      6eP8KAWvb4vytxdDx7pZx7VPXpLLuu1x1m6PHbM2SACIoy4vS+PWqwqO6D1Prgyzusb9Rfjw
      ubnkZh3/AXD9BbnEE8rzAbBoeoAHv1GG39RYvyOG7UDCDkgAHMYdHy3kx3/rPiYB8N83FpKb
      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
      EEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASA
      EEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASA
      EEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEEJ4lASAEG+CPyuPvLIqsgrKQdOOdXMOa/b7Pk7V
      iRe8bdvXDZOC0VMomTCHrMKK4V+oaX3/P8YC2fnMWfZJyqcuOtZNGTHdMCmdMJeCMVOOyvbM
      o7IVITwiq6CME5b+B2WT5qMlB7F4pJcDW1+l+tk/HNO2FYyeTMHoKTRsWYEV7R3wXOXss2nZ
      tZ69654+6vsdN+9cpp99Db6M7PRjHfu3s+nJXxLubEo/VjJ+Didd/bX0z0op4pEg7Xur2bH8
      b4Q6G4962w7FDGQxds4Sor2dNO9Y86a2kZFbRMW0k2jfW02wtf4ot3Awf3YBi6/6Kj0t9az4
      /W1veXtyBiDECGm6yeKrvkbZxHns3/wy1c/9iZ2vPUqkp41x85ce6+ZROnEeM5deTyCn4B3b
      Z+Xss5l1wU0o5bB9+UNsfOIXHNj2GoVjpnLKNf8PX0bOoPd0HdjJ3g3P0bBlBfFQF6NnnMKp
      132LQPY71+6jJauwgplLr6do7PR3ZH+JaIjtyx9i77p/H5XtyRmAECNUOGYy2YUV7F79JNte
      uD/9+PblD1Iyftag1+umn7yycSjHobe9AduK9T2paWTkFhHILsCKBAl3tQx4r6YbaJqOY1sY
      vgC5peOwrSjB1n1Dtk03TDTdSP7Zh276AHAS1qDX+rPyyS6qINLTRrSnfdDzGXkl5JWOJRGP
      0NlQi3LsYfbpY8aSj+AkLFb++U562xsAaNiygnBXK5NP+QCTTr6EmpceGPC+5tq17Fz5aPrn
      E879KBMWLWPM7DPZveqxIfcFh+lPIKd4DFmF5ViRIF0HdqGUM2gbmm6SUzSKhBVD04Y+/tV0
      g4LRU/AFsgi21hPpaRv2dbph9v051ee2Df32PZJ2AWiGiQY4dmLQfjRdx0lYJOIRdr/+xJDb
      yC2rIjOvhGhPGz0te/ver+lohoGTSAAq9SC6YUoACDFSmu7+uvQvdaS01W0Z8PO4eUuZvuQa
      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
      /xcEd1seAeZGdgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Time Series (2)' width='384'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='page 4' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3QU1d/H8fdszaZ3ElIIhBB671WaVBEFuwI2QAWxICqoIChNRBEVUX4q
      iCAKgqCgiBTpvXeQEkKAkN7L7jx/LCwsqSAQH+b7Oodz2NnZmTt3du9n5t67G0VVVRUhhBCa
      oyvrAgghhCgbEgBCCKFREgBCCKFRhmsXWEKjy6IcQgghbjO5AxBCCI2SABBCCI2SABBCCI2S
      ABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2S
      ABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2S
      ABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2S
      ABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI2SABBCCI0y
      lHUBhPgveaqrBxXKlf5jcep8Pl8vTbuFJRJ3qnuau9Iw2lzsOkdi8vh+RfotK4MEgBBXaV3b
      hXpRzh9Ks0mhnI+e80n55OQ6r7/jaI4EwG3QsaEFnQJ/bM0q66LcNO3rW3isozsnz+UXuY6X
      W7YEgBC3S7/x8QWWtahp5tfxwTw1Pp4N+3PKoFTi2e4eGHTKHRUAAIlpNhoNiC2z/csYgBBC
      aJTcAQhxC5iNCtHhRsxGhX/O5pGQaiv1az1cFcICDaRlqsRcKNg9EOKvx9tdx5l4KykZpdtu
      gLeOcj4GLiRZuZBsLdVrfNx1RIYYybeqHD6dR1auWupjKA2LWcHNRSE9SyX7Jm/7drCYFaLD
      jBj0Csdi80hOL/05vhk8XBWiQo0oisLxG9y/BIAQN5FRD0Mf9ua5ez3xcLXfYNtsKr9uzGTo
      tETir2l8DXpY+VF5JsxNJj3LxssPeNGylgt6nQLA7mM59B0Xz7lEK0928WDAPR5EBBsByLeq
      fL00jTe+TES9pv386d1AVmzL4nBMHsMf96FhtBlFAVVV2X44lze+SmD74WsGNC4p56NnXH9f
      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
      QgiNkgAQQgiNkgAQQgiNkgAQQgiNkgAQQgiNkgAQQgiNkgAQQgiNkgAQQgiNkgAQQgiNkgC4
      xGQyOj1WFAWjwVDouu5ubphNJsdjo8GAj7eX0zo6nQ4Xs/nmF1QIIW4SzQdA7epVmf35ZN56
      +QXHsnYtm/HbnP/x8H3dC6zf58H7+GXWF/z50yyaNaxHcLlAvpo8lpee7cfLA58C4OGe3Vmz
      aC5zp3/MEw/cd9uORQghrkfhl7ga8kCPrhw8ehzzVXcAD/TowoHDRwusqygK/fs8wj2PP0uV
      yIoM7Psov/+1hm9/WMDqDZv54oMx+Pp4M6R/P3r2Hcj5+It4uLvdzsMRQohS0/wdwNvjJ7N+
      8zanZc8Ne4cjx08UWDcwwI8L8RdJSk5hy47dRFWKYN2W7fTo3IFXBj7FvkNHaFS3Fn+uWcf5
      +IsApKVnANCicQNaNG5AeEj5W39QQghRCpq/A7geebl5jn59o9GA1WolNu4c46ZMw8fbi39O
      naZ5o/p4uruXcUmFEKJkmr8DCC0fRIC/Hx7uboSHlEev1xEeUh5vL098vb0JLheITqejQ+sW
      JKWkotMp1K9dk3s7dWD3voMAxCckcuT4CfLzrezce4Dq0ZVp1bQRFSuEUalCGADrt2xn/Zbt
      nI49W5aHK4QQDpoPgOf6PUab5o3xcHdnSP9+uLu5MaR/PyIrhFOtSiSP976XOjWq0ffB+1FV
      lTGTP+O5fo/SrlVzPpr+dYHtpaVn8Ob7k3jo3m689vyzREZUKIOjEkKIkimqqqpXL7CERpdV
      Wf6z+j7Ui3Wbt3L85GnAPmXUZrWRb7UW+RpFUTAYDOTl5TktHzZ4ABOnTr+l5RVCiNKQMYBS
      +GHREnJych2Pc3PzilnbTlXVAo2/EEL8l2i+C6g0rm78hRDiTiEBIIQQGiUBIIQQGiUBIIQQ
      GiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQ
      GiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQ
      GiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQGiUBIIQQ
      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
    </thumbnail>
  </thumbnails>
</workbook>
